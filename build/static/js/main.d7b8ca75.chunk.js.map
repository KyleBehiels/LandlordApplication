{"version":3,"sources":["logo.svg","components/firebase.js","pages/Dashboard.js","components/Notification.js","components/Event.js","components/PropertyCard.js","pages/PropertiesPage.js","pages/TenantsPage.js","pages/WorkOrdersPage.js","components/InfoModal.js","pages/AnalyticsPage.js","components/WorkOrder.js","components/AppRouter.js","pages/LoginPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","firstname","userId","Notification","react_default","a","createElement","this","props","header","className","text","origin","Component","Event","location","time","description","library","add","faBell","faCalendar","Dashboard","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","auth","currentUser","uid","toggleNewEventBox","bind","assertThisInitialized","submitEvent","hashCode","state","defineProperty","first_name","events","notifications","components_Notification","_this2","database","ref","on","snapshot","forEach","child","val","type","push","key","setState","components_Event","_this3","once","then","catch","e","alert","message","console","log","eventDate","document","getElementById","value","eventDescription","eventLocation","eventType","eventKey","set","mString","returnable","x","length","charCodeAt","toggleButton","eventBox","btnText","innerHTML","classList","remove","react_fontawesome_index_es","icon","map","not","onClick","id","htmlFor","placeholder","evnt","InfoModal","content","hideModal","title","PropertyCard","toggleTenantForm","submitTenant","showTenantsModal","showWorkOrdersModal","newTenantFormBtn","prop_key","newTenantForm","tenants","tenantKey","first","last","phone","email","rent","renderable","ten","components_InfoModal","workOrders","workOrderKey","date","wo","tenantEmail","tenantFirst","tenantLast","tenantRent","tenantPhone","address","delinquent_tenants","paid_tenants","maintenance_requests","monthly_rent","PropertiesPage","properties","togglePropertyForm","submitNewProperty","togglePropertyFormButton","propertyForm","delinquent","paid","propertyKey","work_orders","components_PropertyCard","proper","TenantsPage","getPropertyList","toggleEditBox","selectedTenant","removeTenant","addTenant","toggleNewTenantBox","markDelinquent","markPaid","selected_tenant","boxId","box","managebtn","contains","managing","arr","getElementsByClassName","arrLength","i","window","confirm","tenantBox","addTenantsButton","callback","_tenants","tenant","name","AnalyticsPage","src","WorkOrder","finishWorkOrder","tempkey","unit","WorkOrdersPage","toggleNewWorkOrderBox","submitWorkOrder","workorders","components_WorkOrder","style","marginBottom","workorderDate","workorderDescription","workorderUnit","workorderType","workorderKey","workorderBox","Index","pages_Dashboard","Properties","pages_PropertiesPage","Tenants","pages_TenantsPage","Analytics","pages_AnalyticsPage","WorkOrders","pages_WorkOrdersPage","AppRouter","onPageChange","logout","onDashboard","onProperties","onTenants","onAnalytics","onWorkOrders","change","signOut","loginFunction","BrowserRouter","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","Link","to","Route","path","exact","component","LoginPage","toggleSignup","onSignUpSubmit","onSignInSubmit","signup","signupForm","signinForm","signupButton","signin","signinUsername","signinPassword","signInWithEmailAndPassword","error","signupPassword","signupConfirm","signupUsername","signupFirstName","signupLastName","createUserWithEmailAndPassword","lastname","errorCode","code","errorMessage","App","loginCheck","setLoggedInVal","loggedIn","onAuthStateChanged","user","rel","integrity","crossOrigin","components_AppRouter","pages_LoginPage","Boolean","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"qIAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,qPCWxCC,gBARa,CACTC,OAAQ,0CACRC,WAAY,4CACZC,YAAa,mDACbC,UAAW,4BACXC,cAAe,wCACfC,kBAAmB,iBAIRN,ICIXO,EAAWC,EDJAR,4BEIAS,mLAXP,OACIC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAKC,KAAKC,MAAMC,OAAhB,IAAwBL,EAAAC,EAAAC,cAAA,WAASF,EAAAC,EAAAC,cAAA,SAAOI,UAAU,mBAAoBH,KAAKC,MAAMG,OACjFP,EAAAC,EAAAC,cAAA,SAAIC,KAAKC,MAAMI,QACfR,EAAAC,EAAAC,cAAA,mBAPWO,aCgBZC,mLAXP,OACIV,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAKC,KAAKC,MAAMC,QAChBL,EAAAC,EAAAC,cAAA,SAAIC,KAAKC,MAAMO,SAAf,MAA4BR,KAAKC,MAAMQ,MACvCZ,EAAAC,EAAAC,cAAA,SAAIC,KAAKC,MAAMS,aACfb,EAAAC,EAAAC,cAAA,mBARIO,qBFOpBK,IAAQC,IAAIC,KACZF,IAAQC,IAAIE,SGRRnB,ECEAA,ECJAA,ECKAD,EAAWC,ENmOAoB,cAtNX,SAAAA,IAAa,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAjB,KAAAe,GACTC,EAAAC,OAAAE,EAAA,EAAAF,CAAAjB,KAAAiB,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAArB,OACAL,EAASR,EAASmC,OAAOC,YAAYC,IACrCR,EAAKS,kBAAoBT,EAAKS,kBAAkBC,KAAvBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KACzBA,EAAKY,YAAcZ,EAAKY,YAAYF,KAAjBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KACnBA,EAAKa,SAAWb,EAAKa,SAASH,KAAdT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KAChBA,EAAKc,MAALb,OAAAc,EAAA,EAAAd,CAAA,CACIe,WAAY,GACZC,OAAQ,GACRC,cAAe,IAHnB,gBAImB,CAACrC,EAAAC,EAAAC,cAACoC,EAAD,QAVXnB,oFAcO,IAAAoB,EAAApC,KAKOb,EAASkD,WAAWC,IAAI,cAAgB3C,EAAS,mBAEvD4C,GAAG,QAAS,SAACC,GAC1B,IAAIN,EAAgB,GACpBM,EAASC,QAAQ,SAACC,GACd,IAAIxC,EACJ,OAAQwC,EAAMC,MAAMC,MAChB,IAAM,aACF1C,EAAS,aACb,MACA,IAAM,OACFA,EAAS,OACb,MACA,QACIA,EAAS,eAKjBgC,EAAcW,KAAKhD,EAAAC,EAAAC,cAACoC,EAAD,CAAcW,IAAKJ,EAAMI,IACXzC,OAAQqC,EAAMC,MAAMtC,OACpBH,OAAQA,EACRE,KAAMsC,EAAMC,MAAMvC,UAIvDgC,EAAKW,SAAS,CAACb,cAAeA,MAMlB/C,EAASkD,WAAWC,IAAI,cAAgB3C,EAAS,YAEvD4C,GAAG,QAAS,SAACC,GACnB,IAAIP,EAAS,GACbO,EAASC,QAAQ,SAACC,GACd,IAAIxC,EACJ,OAAQwC,EAAMC,MAAMC,MAChB,IAAM,cACF1C,EAAS,cACb,MACA,IAAM,UACFA,EAAS,UACT,MACJ,QACIA,EAAS,QAKjB+B,EAAOY,KAAKhD,EAAAC,EAAAC,cAACiD,EAAD,CAAOF,IAAKJ,EAAMI,IACGtC,SAAUkC,EAAMC,MAAMnC,SACtBN,OAAQA,EACRQ,YAAagC,EAAMC,MAAMjC,YACzBD,KAAMiC,EAAMC,MAAMlC,UAIvD2B,EAAKW,SAAS,CAACd,OAAQA,kDAWX,IAAAgB,EAAAjD,KAChBN,EAAYP,EAASkD,WAAWC,IAAI,cAAgB3C,GAAQuD,KAAK,SAChEC,KAAK,SAACX,GACL9C,EAAY8C,EAASG,MAAMjD,UAC3BuD,EAAKF,SAAS,CACZf,WAAYtC,MAEb0D,MAAM,SAACC,GACNC,MAAMD,EAAEE,WAGZC,QAAQC,IAAIzD,KAAK6B,SAAS,sDAK1B,IAAI6B,EAAYC,SAASC,eAAe,cAAcC,MAClDC,EAAmBH,SAASC,eAAe,qBAAqBC,MAChEE,EAAgBJ,SAASC,eAAe,kBAAkBC,MAC1DG,EAAYL,SAASC,eAAe,cAAcC,MAEtD,GAAgB,IAAbH,GAAuC,IAApBI,GAA2C,IAAjBC,GAAoC,IAAbC,EAAgB,CAEnF,IAAIC,EAAWjE,KAAK6B,SAASiC,GAAoB9D,KAAK6B,SAAS6B,GAAa1D,KAAK6B,SAASkC,GAAiB/D,KAAK6B,SAASmC,GAEzH7E,EAASkD,WAAWC,IAAI,cAAgB3C,EAAS,WAAasE,GAAUC,IAAI,CACxExD,YAAaoD,EACbrD,KAAMiD,EACNd,KAAMoB,EACNxD,SAAUuD,IAGdP,QAAQC,IAAIC,GAEZ1D,KAAKyB,sDAMJ0C,GAGL,IAFA,IAAIC,EAAa,EAETC,EAAI,EAAGA,EAAIF,EAAQG,OAAQD,IAE/BD,GAAcD,EAAQI,WAAWF,GAGrC,OAAOD,8CAIP,IAAII,EAAeb,SAASC,eAAe,oBACvCa,EAAWd,SAASC,eAAe,iBACnCc,EAAUF,EAAaG,UAEb,eAAXD,GACCD,EAASG,UAAUC,OAAO,UAC1BL,EAAaI,UAAUC,OAAO,eAC9BL,EAAaI,UAAUhE,IAAI,cAC3B4D,EAAaG,UAAY,UACR,UAAXD,IACND,EAASG,UAAUhE,IAAI,UACvB4D,EAAaI,UAAUC,OAAO,cAC9BL,EAAaI,UAAUhE,IAAI,eAC3B4D,EAAaG,UAAY,gDAQ7B,OAFAnB,QAAQC,IAAIzD,KAAK8B,MAAMI,eAGnBrC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACXN,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,kBAAUC,KAAK8B,MAAME,WAArB,iHAGJnC,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,sBACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,QACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACXN,EAAAC,EAAAC,cAAA,MAAII,UAAU,cAAaN,EAAAC,EAAAC,cAAC+E,EAAA,EAAD,CAAiBC,KAAK,SAAjD,kBACAlF,EAAAC,EAAAC,cAAA,WACCC,KAAK8B,MAAMI,cAAc8C,IAAI,SAAAC,GAAG,OAAIpF,EAAAC,EAAAC,cAAA,OAAK+C,IAAKmC,EAAInC,KAAMmC,QAIrEpF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,sBACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,QACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACXN,EAAAC,EAAAC,cAAA,MAAII,UAAU,cAAaN,EAAAC,EAAAC,cAAC+E,EAAA,EAAD,CAAiBC,KAAK,aAAjD,oBAA+FlF,EAAAC,EAAAC,cAAA,UAAQmF,QAASlF,KAAKyB,kBAAmB0D,GAAG,mBAAmBhF,UAAU,+BAAzE,eAA/F,KACAN,EAAAC,EAAAC,cAAA,OAAKoF,GAAG,gBAAgBhF,UAAU,qBAC9BN,EAAAC,EAAAC,cAAA,SAAOqF,QAAQ,cAAf,QACAvF,EAAAC,EAAAC,cAAA,UAAQoF,GAAG,aAAahF,UAAU,gBAC9BN,EAAAC,EAAAC,cAAA,UAAQ8D,MAAM,eAAd,eACAhE,EAAAC,EAAAC,cAAA,UAAQ8D,MAAM,WAAd,YAGJhE,EAAAC,EAAAC,cAAA,SAAOqF,QAAQ,cAAf,QACAvF,EAAAC,EAAAC,cAAA,SAAOoF,GAAG,aAAahF,UAAU,eAAeyC,KAAK,SACrD/C,EAAAC,EAAAC,cAAA,SAAOqF,QAAQ,kBAAf,YACAvF,EAAAC,EAAAC,cAAA,SAAOoF,GAAG,iBAAiBhF,UAAU,eAAeyC,KAAK,OAAOyC,YAAY,aAC5ExF,EAAAC,EAAAC,cAAA,SAAOqF,QAAQ,qBAAf,eACAvF,EAAAC,EAAAC,cAAA,SAAOoF,GAAG,oBAAoBhF,UAAU,eAAeyC,KAAK,WAAWyC,YAAY,gBACnFxF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UAAQmF,QAASlF,KAAK4B,YAAazB,UAAU,gCAA7C,cAEJN,EAAAC,EAAAC,cAAA,WACCC,KAAK8B,MAAMG,OAAO+C,IAAI,SAAAM,GAAI,OAAIzF,EAAAC,EAAAC,cAAA,OAAK+C,IAAKwC,EAAKxC,KAAMwC,kBA5MhEhF,aOMTiF,mLAlBP,OAFA/B,QAAQC,IAAIzD,KAAKC,MAAMuF,SAGnB3F,EAAAC,EAAAC,cAAA,OAAKoF,GAAG,gBACJtF,EAAAC,EAAAC,cAAA,OAAKmF,QAASlF,KAAKC,MAAMwF,UAAWtF,UAAU,YAC9CN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,iBACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACXN,EAAAC,EAAAC,cAAA,UAAKC,KAAKC,MAAMyF,OAChB7F,EAAAC,EAAAC,cAAA,WACCC,KAAKC,MAAMuF,kBAZZlF,aJyMTqF,cAjMX,SAAAA,IAAa,IAAA3E,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAjB,KAAA2F,IACT3E,EAAAC,OAAAE,EAAA,EAAAF,CAAAjB,KAAAiB,OAAAG,EAAA,EAAAH,CAAA0E,GAAAtE,KAAArB,QACK6B,SAAWb,EAAKa,SAASH,KAAdT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KAChBA,EAAK4E,iBAAmB5E,EAAK4E,iBAAiBlE,KAAtBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KACxBA,EAAK6E,aAAe7E,EAAK6E,aAAanE,KAAlBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KACpBA,EAAK8E,iBAAmB9E,EAAK8E,iBAAiBpE,KAAtBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KACxBA,EAAK+E,oBAAsB/E,EAAK+E,oBAAoBrE,KAAzBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KAC3BA,EAAKyE,UAAYzE,EAAKyE,UAAU/D,KAAfT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KACjBrB,EAASR,EAASmC,OAAOC,YAAYC,IACrCR,EAAKc,MAAQ,CACTyD,UAAW,IAVNvE,wEAeJmD,GAGL,IAFA,IAAIC,EAAa,EAETC,EAAI,EAAGA,EAAIF,EAAQG,OAAQD,IAE/BD,GAAcD,EAAQI,WAAWF,GAGrC,OAAOD,sCAIPpE,KAAK+C,SAAS,CACVwC,UAAW,gDASf,IAAIS,EAAmBrC,SAASC,eAAe,oBAAsB5D,KAAKC,MAAMgG,UAC5EC,EAAgBvC,SAASC,eAAe,kBAAoB5D,KAAKC,MAAMgG,UACzC,iBAA/BD,EAAiBrB,WAChBuB,EAActB,UAAUC,OAAO,UAC/BmB,EAAiBrB,UAAY,SAC7BqB,EAAiBpB,UAAUC,OAAO,eAClCmB,EAAiBpB,UAAUhE,IAAI,gBAG/BsF,EAActB,UAAUhE,IAAI,UAC5BoF,EAAiBrB,UAAY,eAC7BqB,EAAiBpB,UAAUhE,IAAI,eAC/BoF,EAAiBpB,UAAUC,OAAO,0DAIxB,IAAAzC,EAAApC,KACVmG,EAAU,GACdhH,EAASkD,WAAWC,IAAI,cAAgB3C,EAAS,eAAiBK,KAAKC,MAAMgG,SAAW,aAAa/C,KAAK,QAAS,SAACV,GAChHA,EAASC,QAAQ,SAAAC,GAEb,IAAI0D,EAAYhE,EAAKP,SAASa,EAAMC,MAAM0D,MAAQ3D,EAAMC,MAAM2D,KAAO5D,EAAMC,MAAM4D,MAAQ7D,EAAMC,MAAM6D,OACrGL,EAAQtD,KACRhD,EAAAC,EAAAC,cAAA,OAAK+C,IAAKsD,GAAY1D,EAAMC,MAAM0D,MAAQ,IAAM3D,EAAMC,MAAM2D,KAAO,MAAQ5D,EAAMC,MAAM4D,MAAQ,MAAQ7D,EAAMC,MAAM6D,MAAQ,OAAS9D,EAAMC,MAAM8D,KAAhJ,IAAsJ5G,EAAAC,EAAAC,cAAA,eAG1JyD,QAAQC,IAAI0C,GAEZ,IAAIO,EAAaP,EAAQnB,IAAI,SAAA2B,GAAG,OAAI9G,EAAAC,EAAAC,cAAA,OAAK+C,IAAK6D,EAAI7D,KAAM6D,KAExDnD,QAAQC,IAAIiD,GAGZtE,EAAKW,SAAS,CACVwC,UAAW1F,EAAAC,EAAAC,cAAC6G,EAAD,CAAWlB,MAAM,UAAUF,QAASkB,EAAYjB,UAAWrD,EAAKqD,8DAKlE,IAAAxC,EAAAjD,KACb6G,EAAa,GACjB1H,EAASkD,WAAWC,IAAI,cAAgB3C,EAAS,eAAiBK,KAAKC,MAAMgG,SAAW,iBAAiB/C,KAAK,QAAS,SAACV,GACpHA,EAASC,QAAQ,SAAAC,GAEb,IAAIoE,EAAe7D,EAAKpB,SAASa,EAAMC,MAAMoE,KAAOrE,EAAMC,MAAMjC,YAAcgC,EAAMC,MAAMtC,QAE1FwG,EAAWhE,KACPhD,EAAAC,EAAAC,cAAA,OAAK+C,IAAKgE,GACNjH,EAAAC,EAAAC,cAAA,UAAK2C,EAAMC,MAAMtC,QACjBR,EAAAC,EAAAC,cAAA,QAAMI,UAAU,YAAYuC,EAAMC,MAAMoE,MACxClH,EAAAC,EAAAC,cAAA,WACC2C,EAAMC,MAAMjC,YACbb,EAAAC,EAAAC,cAAA,eAIZ,IAAI2G,EAAaG,EAAW7B,IAAI,SAAAgC,GAAE,OAAInH,EAAAC,EAAAC,cAAA,OAAK+C,IAAKkE,EAAGlE,KAAMkE,KAEzD/D,EAAKF,SAAS,CACVwC,UAAW1F,EAAAC,EAAAC,cAAC6G,EAAD,CAAWlB,MAAM,cAAcF,QAASkB,EAAYjB,UAAWxC,EAAKwC,uDASvF,IAAIwB,EAActD,SAASC,eAAe,eAAiB5D,KAAKC,MAAMgG,UAAUpC,MAC5EqD,EAAcvD,SAASC,eAAe,eAAiB5D,KAAKC,MAAMgG,UAAUpC,MAC5EsD,EAAaxD,SAASC,eAAe,cAAgB5D,KAAKC,MAAMgG,UAAUpC,MAC1EuD,EAAazD,SAASC,eAAe,cAAgB5D,KAAKC,MAAMgG,UAAUpC,MAC1EwD,EAAc1D,SAASC,eAAe,eAAiB5D,KAAKC,MAAMgG,UAAUpC,MAC5EuC,EAAWpG,KAAK6B,SAASoF,GAAejH,KAAK6B,SAASqF,GAAelH,KAAK6B,SAASsF,GAAcnH,KAAK6B,SAASuF,GAAcpH,KAAK6B,SAASwF,GAE5H,KAAhBJ,GAAqC,KAAhBC,GAAoC,KAAfC,GAAmC,KAAfC,GAAoC,KAAhBC,GACjFlI,EAASkD,WAAWC,IAAI,cAAgB3C,EAAS,eAAiBK,KAAKC,MAAMgG,SAAW,YAAcG,GAAWlC,IAAI,CACjHsC,MAAOS,EACPZ,MAAOa,EACPZ,KAAMa,EACNV,KAAMW,EACNb,MAAOc,IAEX/D,MAAM,kBAGNA,MAAM,uEAMV,OACIzD,EAAAC,EAAAC,cAAA,WACKC,KAAK8B,MAAMyD,UACZ1F,EAAAC,EAAAC,cAAA,OAAKI,UAAU,kBACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACXN,EAAAC,EAAAC,cAAA,MAAII,UAAU,cAAcH,KAAKC,MAAMqH,SACvCzH,EAAAC,EAAAC,cAAA,MAAII,UAAU,YAAWN,EAAAC,EAAAC,cAAA,QAAMI,UAAU,iBAAhB,gBAAoDH,KAAKC,MAAMsH,mBAAxF,IAA4G1H,EAAAC,EAAAC,cAAA,QAAMI,UAAU,iBAAhB,UAA8CH,KAAKC,MAAMuH,aAArK,IAAmL3H,EAAAC,EAAAC,cAAA,QAAMI,UAAU,iBAAhB,iBAAqDH,KAAKC,MAAMwH,qBAAnP,IAAyQ5H,EAAAC,EAAAC,cAAA,QAAMI,UAAU,iBAAhB,kBAAsDH,KAAKC,MAAMyH,aAA1U,KACA7H,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,iCACXN,EAAAC,EAAAC,cAAA,UAAQmF,QAASlF,KAAK8F,iBAAkB3F,UAAU,4BAAlD,gBACAN,EAAAC,EAAAC,cAAA,UAAQmF,QAASlF,KAAK+F,oBAAqB5F,UAAU,4BAArD,oBACAN,EAAAC,EAAAC,cAAA,UAAQmF,QAASlF,KAAK4F,iBAAkBT,GAAI,oBAAsBnF,KAAKC,MAAMgG,SAAU9F,UAAU,4BAAjG,iBAEJN,EAAAC,EAAAC,cAAA,OAAKoF,GAAI,kBAAoBnF,KAAKC,MAAMgG,SAAU9F,UAAU,eACxDN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACfN,EAAAC,EAAAC,cAAA,MAAII,UAAU,cAAd,cACAN,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,QAAMI,UAAU,cACZN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,UACXN,EAAAC,EAAAC,cAAA,SAAOoF,GAAI,eAAiBnF,KAAKC,MAAMgG,SAAU9F,UAAU,eAAeyC,KAAK,QAAQyC,YAAY,YAG3GxF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OAEXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YACXN,EAAAC,EAAAC,cAAA,SAAOoF,GAAI,eAAiBnF,KAAKC,MAAMgG,SAAU9F,UAAU,eAAeyC,KAAK,OAAOyC,YAAY,WAGtGxF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YACXN,EAAAC,EAAAC,cAAA,SAAOoF,GAAI,cAAgBnF,KAAKC,MAAMgG,SAAU9F,UAAU,eAAeyC,KAAK,OAAOyC,YAAY,WAIzGxF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OAEXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YACXN,EAAAC,EAAAC,cAAA,SAAOoF,GAAI,cAAgBnF,KAAKC,MAAMgG,SAAU9F,UAAU,eAAeyC,KAAK,SAASyC,YAAY,gBAGvGxF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YACXN,EAAAC,EAAAC,cAAA,SAAOoF,GAAI,eAAiBnF,KAAKC,MAAMgG,SAAU9F,UAAU,eAAeyC,KAAK,QAAQyC,YAAY,mBAI3GxF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,UACXN,EAAAC,EAAAC,cAAA,UAAQmF,QAASlF,KAAK6F,aAAc1F,UAAU,mBAA9C,+BArLjBG,aCgJZqH,cA7IX,SAAAA,IAAa,IAAA3G,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAjB,KAAA2H,IACT3G,EAAAC,OAAAE,EAAA,EAAAF,CAAAjB,KAAAiB,OAAAG,EAAA,EAAAH,CAAA0G,GAAAtG,KAAArB,QAEK8B,MAAQ,CACTE,WAAY,GACZ4F,WAAY,IAEhBjI,EAASR,EAASmC,OAAOC,YAAYC,IAC3BrC,EAASkD,WAAWC,IAAI,cAAgB3C,GAClDqB,EAAK6G,mBAAqB7G,EAAK6G,mBAAmBnG,KAAxBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KAC1BA,EAAK8G,kBAAoB9G,EAAK8G,kBAAkBpG,KAAvBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KAVhBA,oFAcT,IAAI+G,EAA2BpE,SAASC,eAAe,eACnDoE,EAAerE,SAASC,eAAe,YACF,kBAAtCmE,EAAyBpD,WACxBqD,EAAapD,UAAUC,OAAO,UAC9BkD,EAAyBnD,UAAUhE,IAAI,cACvCmH,EAAyBnD,UAAUC,OAAO,eAC1CkD,EAAyBpD,UAAY,WAGrCqD,EAAapD,UAAUhE,IAAI,UAC3BmH,EAAyBnD,UAAUC,OAAO,cAC1CkD,EAAyBnD,UAAUhE,IAAI,eACvCmH,EAAyBpD,UAAY,8DAMzC,IAAI2C,EAAU3D,SAASC,eAAe,gBAAgBC,MAClDoE,EAAatE,SAASC,eAAe,mBAAmBC,MACxDqE,EAAOvE,SAASC,eAAe,kBAAkBC,MACjD4C,EAAO9C,SAASC,eAAe,kBAAkBC,MACjDgD,EAAalD,SAASC,eAAe,kBAAkBC,MAE3D,GAAe,KAAZyD,GAAiC,KAAfW,GAA8B,KAATC,GAAwB,KAATzB,GAA8B,KAAfI,EAAkB,CACtF,IAAIsB,EAAcnI,KAAK6B,SAASyF,GAAWtH,KAAK6B,SAASoG,GAAcjI,KAAK6B,SAASqG,GAAQlI,KAAK6B,SAAS4E,GAAQzG,KAAK6B,SAASgF,GAEjI1H,EAASkD,WAAWC,IAAI,cAAgB3C,EAAS,eAAiBwI,GAAajE,IAAI,CAC/EoD,QAASA,EACTC,mBAAoBU,EACpBT,aAAcU,EACdR,aAAcjB,EACd2B,YAAavB,sCAOf1C,GAGN,IAFA,IAAIC,EAAa,EAETC,EAAI,EAAGA,EAAIF,EAAQG,OAAQD,IAE/BD,GAAcD,EAAQI,WAAWF,GAGrC,OAAOD,+CAGS,IAAAhC,EAAApC,KAEhBb,EAASkD,WAAWC,IAAI,cAAgB3C,GAAQuD,KAAK,SACpDC,KAAK,SAACX,GACL,IAAI9C,EAAY8C,EAASG,MAAMjD,UAC/B0C,EAAKW,SAAS,CACZf,WAAYtC,MAEb0D,MAAM,SAACC,GACNC,MAAMD,EAAEE,uDAKG,IAAAN,EAAAjD,KACfb,EAASkD,WAAWC,IAAI,cAAc3C,EAAO,eAAe4C,GAAG,QAAS,SAACC,GACrE,IAAIoF,EAAa,GACjBpF,EAASC,QAAQ,SAAAC,GACbc,QAAQC,IAAIf,GAEZkF,EAAW/E,KAAKhD,EAAAC,EAAAC,cAACsI,EAAD,CACZvF,IAAKJ,EAAMI,IACXwE,QAAS5E,EAAMC,MAAM2E,QACrBrB,SAAUvD,EAAMI,IAChByE,mBAAoB7E,EAAMC,MAAM4E,mBAChCE,qBAAsB/E,EAAMC,MAAM8E,qBAClCC,aAAchF,EAAMC,MAAM+E,aAC1BF,aAAc9E,EAAMC,MAAM6E,kBAElCvE,EAAKF,SAAS,CACV6E,WAAYA,uCAUpB,OACI/H,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACXN,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,kBAAUC,KAAK8B,MAAME,WAArB,yIAGJnC,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACXN,EAAAC,EAAAC,cAAA,UAAQoF,GAAG,cAAcD,QAASlF,KAAK6H,mBAAoB1H,UAAU,8BAArE,kBACAN,EAAAC,EAAAC,cAAA,QAAMoF,GAAG,WAAWhF,UAAU,+BAC1BN,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACXN,EAAAC,EAAAC,cAAA,SAAOoF,GAAG,eAAehF,UAAU,eAAeyC,KAAK,OAAOyC,YAAY,aAE9ExF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACXN,EAAAC,EAAAC,cAAA,SAAOoF,GAAG,kBAAkBhF,UAAU,yCAAyCyC,KAAK,SAASyC,YAAY,eACzGxF,EAAAC,EAAAC,cAAA,SAAOoF,GAAG,iBAAiBhF,UAAU,yCAAyCyC,KAAK,SAASyC,YAAY,gBACxGxF,EAAAC,EAAAC,cAAA,SAAOoF,GAAG,iBAAiBhF,UAAU,yCAAyCyC,KAAK,SAASyC,YAAY,eACxGxF,EAAAC,EAAAC,cAAA,SAAOoF,GAAG,iBAAiBhF,UAAU,yCAAyCyC,KAAK,SAASyC,YAAY,iBACxGxF,EAAAC,EAAAC,cAAA,UAAQmF,QAASlF,KAAK8H,kBAAmB3C,GAAG,aAAahF,UAAU,8BAAnE,iBAEJN,EAAAC,EAAAC,cAAA,aAGPC,KAAK8B,MAAM8F,WAAW5C,IAAI,SAAAsD,GAAM,OAAIzI,EAAAC,EAAAC,cAAA,OAAK+C,IAAKwF,EAAOxF,KAAMwF,cAvInDhI,aCyRdiI,cA1RX,SAAAA,IAAa,IAAAvH,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAjB,KAAAuI,IACTvH,EAAAC,OAAAE,EAAA,EAAAF,CAAAjB,KAAAiB,OAAAG,EAAA,EAAAH,CAAAsH,GAAAlH,KAAArB,QAEKwI,gBAAkBxH,EAAKwH,gBAAgB9G,KAArBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KACvBA,EAAKyH,cAAgBzH,EAAKyH,cAAc/G,KAAnBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KACrBA,EAAK0H,eAAiB1H,EAAK0H,eAAehH,KAApBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KACtBA,EAAK2H,aAAe3H,EAAK2H,aAAajH,KAAlBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KACpBA,EAAK4H,UAAY5H,EAAK4H,UAAUlH,KAAfT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KACjBA,EAAK6H,mBAAqB7H,EAAK6H,mBAAmBnH,KAAxBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KAC1BA,EAAK6E,aAAe7E,EAAK6E,aAAanE,KAAlBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KACpBA,EAAK8H,eAAiB9H,EAAK8H,eAAepH,KAApBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KACtBA,EAAK+H,SAAW/H,EAAK+H,SAASrH,KAAdT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KAChBrB,EAASR,EAASmC,OAAOC,YAAYC,IAErCR,EAAKc,MAAQ,CACT8F,WAAY,GACZoB,gBAAiB,IAhBZhI,6EAqBCiI,GACV,IAAIC,EAAMvF,SAASC,eAAe,YAAcqF,GAC5CE,EAAYxF,SAASC,eAAe,cAAgBqF,GAExD,GAAGC,EAAItE,UAAUwE,SAAS,UACtBF,EAAItE,UAAUC,OAAO,UACrBsE,EAAUvE,UAAUC,OAAO,eAC3BsE,EAAUvE,UAAUhE,IAAI,cACxBuI,EAAUxE,UAAY,SACtB3E,KAAK+C,SAAS,CACVsG,UAAU,QAId,CACAH,EAAItE,UAAUhE,IAAI,UAClBuI,EAAUvE,UAAUhE,IAAI,eACxBuI,EAAUvE,UAAUC,OAAO,cAC3BsE,EAAUxE,UAAY,SACtB3E,KAAK+C,SAAS,CACVsG,UAAU,IAKd,IAHA,IAAIC,EAAM3F,SAAS4F,uBAAuB,cACtCC,EAAYF,EAAIhF,OAEZmF,EAAI,EAAGA,EAAID,EAAWC,IAC1BH,EAAIG,GAAG7E,UAAUC,OAAO,0FASvBsD,GACyB,KAA/BnI,KAAK8B,MAAMkH,gBACV1F,MAAM,2BAGHoG,OAAOC,QAAQ,kDACdxK,EAASkD,WAAWC,IAAI,cAAgB3C,EAAS,eAAiBwI,EAAc,YAAcnI,KAAK8B,MAAMkH,iBAAiBnE,SAC1H7E,KAAKwI,oDAMRrE,GAGL,IAFA,IAAIC,EAAa,EAETC,EAAI,EAAGA,EAAIF,EAAQG,OAAQD,IAE/BD,GAAcD,EAAQI,WAAWF,GAGrC,OAAOD,yCAGIsE,EAAgBO,GAC3B,GAAGjJ,KAAK8B,MAAMuH,SAAS,CAEnBrJ,KAAK+C,SAAS,CACViG,gBAAiBN,IAKrB,IAHA,IAAIY,EAAM3F,SAAS4F,uBAAuB,cACtCC,EAAYF,EAAIhF,OAEZmF,EAAI,EAAGA,EAAID,EAAWC,IAC1BH,EAAIG,GAAG7E,UAAUC,OAAO,eAM5BlB,SAASC,eAAeqF,EAAQ,GAAKP,GAAgB9D,UAAUhE,IAAI,2DAMxDqI,GACf,IAAIW,EAAYjG,SAASC,eAAe,kBAAkBqF,GACtDY,EAAmBlG,SAASC,eAAe,kBAAoBqF,GAGhEW,EAAUhF,UAAUwE,SAAS,WAC5BQ,EAAUhF,UAAUC,OAAO,UAC3BgF,EAAiBjF,UAAUhE,IAAI,cAC/BiJ,EAAiBjF,UAAUC,OAAO,eAClCgF,EAAiBlF,UAAY,WAG7BiF,EAAUhF,UAAUhE,IAAI,UACxBiJ,EAAiBjF,UAAUC,OAAO,cAClCgF,EAAiBjF,UAAUhE,IAAI,eAC/BiJ,EAAiBlF,UAAY,mDAKjCrB,MAAM,sIAINA,MAAM,wIAGG2F,GACT,IAAIhC,EAActD,SAASC,eAAe,gBAAkBqF,GAAOpF,MAC/DqD,EAAavD,SAASC,eAAe,gBAAkBqF,GAAOpF,MAC9DsD,EAAaxD,SAASC,eAAe,eAAiBqF,GAAOpF,MAC7DwD,EAAc1D,SAASC,eAAe,gBAAkBqF,GAAOpF,MAC/DuD,EAAazD,SAASC,eAAe,eAAiBqF,GAAOpF,MAEjE,GAAmB,KAAhBoD,GAAsC,KAAhBC,GAAqC,KAAfC,GAAqC,KAAhBE,GAAqC,KAAfD,EAAmB,CAEzG,IAAIhB,EAAYpG,KAAK6B,SAASqF,EAAcC,EAAaF,EAAcI,GAEvElI,EAASkD,WAAWC,IAAI,cAAgB3C,EAAS,eAAiBsJ,EAAQ,YAAc7C,GAAWlC,IAAI,CACnGmC,MAAOa,EACPZ,KAAMa,EACNX,MAAOS,EACPV,MAAOc,EACPZ,KAAMW,IAGV9D,MAAO4D,EAAc,IAAMC,EAAa,iCAIxC7D,MAAM,uEAKEwG,GAAS,IAAA1H,EAAApC,KACjB4H,EAAa,GACjBzI,EAASkD,WAAWC,IAAI,cAAc3C,EAAO,eAAeuD,KAAK,QAAS,SAACV,GAEvEA,EAASC,QAAQ,SAAAC,GACbc,QAAQC,IAAIf,GACZ,IAAIyD,EAAU,GACdhH,EAASkD,WAAWC,IAAI,cAAgB3C,EAAS,eAAiB+C,EAAMI,IAAM,YAAYI,KAAK,QAAS,SAAC6G,GAErGA,EAAStH,QAAQ,SAAAuH,GACbxG,QAAQC,IAAIf,EAAMC,MAAM6D,OACxBL,EAAQtD,KAAK,CACTC,IAAMkH,EAAOlH,IACbmH,KAAMD,EAAOrH,MAAM0D,MAAQ,IAAM2D,EAAOrH,MAAM2D,KAC9CE,MAAOwD,EAAOrH,MAAM6D,MACpBD,MAAQyD,EAAOrH,MAAM4D,MACrBE,KAAMuD,EAAOrH,MAAM8D,SAQ3BmB,EAAW/E,KACXhD,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,kBACXN,EAAAC,EAAAC,cAAA,UAAK2C,EAAMC,MAAM2E,UAErBzH,EAAAC,EAAAC,cAAA,OAAKI,UAAU,kBACXN,EAAAC,EAAAC,cAAA,UAAQoF,GAAI,cAAgBzC,EAAMI,IAAKoC,QAAS,kBAAI9C,EAAKqG,cAAc/F,EAAMI,MAAM3C,UAAU,iDAA7F,YAGRN,EAAAC,EAAAC,cAAA,OAAKoF,GAAI,YAAYzC,EAAMI,IAAK3C,UAAU,cACtCN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACXN,EAAAC,EAAAC,cAAA,UAAQmF,QAAS9C,EAAK2G,SAAU5I,UAAU,iDAA1C,aACAN,EAAAC,EAAAC,cAAA,UAAQmF,QAAS9C,EAAK0G,eAAgB3I,UAAU,iDAAhD,mBACAN,EAAAC,EAAAC,cAAA,UAAQoF,GAAI,kBAAkBzC,EAAMI,IAAKoC,QAAS,kBAAM9C,EAAKyG,mBAAmBnG,EAAMI,MAAM3C,UAAU,iDAAtG,gBACAN,EAAAC,EAAAC,cAAA,UAAQmF,QAAS,kBAAM9C,EAAKuG,aAAajG,EAAMI,MAAM3C,UAAU,gDAA/D,qBAGRN,EAAAC,EAAAC,cAAA,OAAKoF,GAAI,kBAAoBzC,EAAMI,IAAK3C,UAAU,UAC9CN,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,QAAMI,UAAU,cACZN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,UACXN,EAAAC,EAAAC,cAAA,SAAOoF,GAAI,gBAAkBzC,EAAMI,IAAK3C,UAAU,eAAeyC,KAAK,QAAQyC,YAAY,YAGlGxF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OAEXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YACXN,EAAAC,EAAAC,cAAA,SAAOoF,GAAI,gBAAkBzC,EAAMI,IAAK3C,UAAU,eAAeyC,KAAK,OAAOyC,YAAY,WAG7FxF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YACXN,EAAAC,EAAAC,cAAA,SAAOoF,GAAI,eAAiBzC,EAAMI,IAAK3C,UAAU,eAAeyC,KAAK,OAAOyC,YAAY,WAIhGxF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OAEXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YACXN,EAAAC,EAAAC,cAAA,SAAOoF,GAAI,eAAiBzC,EAAMI,IAAK3C,UAAU,eAAeyC,KAAK,SAASyC,YAAY,gBAG9FxF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YACXN,EAAAC,EAAAC,cAAA,SAAOoF,GAAI,gBAAkBzC,EAAMI,IAAK3C,UAAU,eAAeyC,KAAK,QAAQyC,YAAY,mBAIlGxF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,UACXN,EAAAC,EAAAC,cAAA,UAAQmF,QAAS,kBAAM9C,EAAKyD,aAAanD,EAAMI,MAAM3C,UAAU,mBAA/D,oBAMhBN,EAAAC,EAAAC,cAAA,SAAOI,UAAU,gBACbN,EAAAC,EAAAC,cAAA,kBAAaF,EAAAC,EAAAC,cAAA,mBAAcF,EAAAC,EAAAC,cAAA,mBAAcF,EAAAC,EAAAC,cAAA,kBACxCoG,EAAQnB,IAAI,SAAA2B,GAAG,OAAI9G,EAAAC,EAAAC,cAAA,MAAIoF,GAAIzC,EAAMI,IAAM,GAAK6D,EAAI7D,IAAKoC,QAAS,kBAAM9C,EAAKsG,eAAe/B,EAAI7D,IAAKJ,EAAMI,MAAM3C,UAAU,aAAa2C,IAAK6D,EAAI7D,KAAKjD,EAAAC,EAAAC,cAAA,UAAK4G,EAAIsD,MAAUpK,EAAAC,EAAAC,cAAA,UAAK4G,EAAIJ,OAA3J,IAAuK1G,EAAAC,EAAAC,cAAA,UAAK4G,EAAIH,OAAhL,IAA4L3G,EAAAC,EAAAC,cAAA,cAAM4G,EAAIF,MAAtM,UAI7BrE,EAAKW,SAAS,CACb6E,WAAYA,uDAYxB5H,KAAKwI,mDAIL,OACI3I,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACXN,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,2IAGJF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACVH,KAAK8B,MAAM8F,WAAW5C,IAAI,SAAAsD,GAAM,OAAIzI,EAAAC,EAAAC,cAAA,OAAK+C,IAAKwF,EAAOxF,KAAMwF,cApRtDhI,aGgCX4J,mLAjCP,OACIrK,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACXN,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,2JAGJF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,sBACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aAAagK,IAAI,kCAEpCtK,EAAAC,EAAAC,cAAA,OAAKI,UAAU,sBACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aAAagK,IAAI,mCAGxCtK,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,sBACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aAAagK,IAAI,kCAEpCtK,EAAAC,EAAAC,cAAA,OAAKI,UAAU,sBACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aAAagK,IAAI,4CA1BhC7J,aC+Bb8J,cA1BX,SAAAA,EAAanK,GAAO,IAAAe,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAjB,KAAAoK,IAEhBpJ,EAAAC,OAAAE,EAAA,EAAAF,CAAAjB,KAAAiB,OAAAG,EAAA,EAAAH,CAAAmJ,GAAA/I,KAAArB,KAAMC,KACDoK,gBAAkBrJ,EAAKqJ,gBAAgB3I,KAArBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KAHPA,iFAOhBwC,QAAQC,IAAIzD,KAAKC,MAAMqK,0CAGvB,OACIzK,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,uBACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,QACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACXN,EAAAC,EAAAC,cAAA,UAAKC,KAAKC,MAAMC,OAAhB,IAAwBL,EAAAC,EAAAC,cAAA,UAAQmF,QAASlF,KAAKqK,gBAAiBlF,GAAG,gBAAgBhF,UAAU,+BAApE,WACxBN,EAAAC,EAAAC,cAAA,kBAAUC,KAAKC,MAAMsK,KAArB,iBAAyCvK,KAAKC,MAAMQ,MACpDZ,EAAAC,EAAAC,cAAA,SAAIC,KAAKC,MAAMS,wBAlBnBJ,aHuKTkK,cAjKX,SAAAA,IAAa,IAAAxJ,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAjB,KAAAwK,GACTxJ,EAAAC,OAAAE,EAAA,EAAAF,CAAAjB,KAAAiB,OAAAG,EAAA,EAAAH,CAAAuJ,GAAAnJ,KAAArB,OACAL,EAASR,EAASmC,OAAOC,YAAYC,IACrCR,EAAKyJ,sBAAwBzJ,EAAKyJ,sBAAsB/I,KAA3BT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KAC7BA,EAAK0J,gBAAkB1J,EAAK0J,gBAAgBhJ,KAArBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KACvBA,EAAKa,SAAWb,EAAKa,SAASH,KAAdT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KAGhBA,EAAKc,MAAO,CACRE,WAAY,IATPhB,oFAYO,IAAAoB,EAAApC,KAIZ2K,EAAa,GACGxL,EAASkD,WAAWC,IAAI,cAAgB3C,EAAS,gBAEvD4C,GAAG,QAAS,SAACC,GACvBA,EAASC,QAAQ,SAACC,GACd,IAAIxC,EACJ,OAAQwC,EAAMC,MAAMC,MAChB,IAAM,cACF1C,EAAS,cACb,MACA,IAAM,UACFA,EAAS,UACT,MACJ,QACIA,EAAS,aAKjByK,EAAW9H,KAAKhD,EAAAC,EAAAC,cAAC6K,EAAD,CAAW9H,IAAKJ,EAAMI,IACLyH,KAAM7H,EAAMC,MAAM4H,KAClBrK,OAAQA,EACRoK,QAAS5H,EAAMI,IACfpC,YAAagC,EAAMC,MAAMjC,YACzBD,KAAMiC,EAAMC,MAAMlC,UAIvD2B,EAAKW,SAAS,CAAC4H,WAAYA,MAG/BnH,QAAQC,IAAIkH,GAEZ3K,KAAK+C,SAAS,CACV4H,WAAYA,gDAIA,IAAA1H,EAAAjD,KAChBN,EAAYP,EAASkD,WAAWC,IAAI,cAAgB3C,GAAQuD,KAAK,SAChEC,KAAK,SAACX,GACL9C,EAAY8C,EAASG,MAAMjD,UAC3BuD,EAAKF,SAAS,CACZf,WAAYtC,MAEb0D,MAAM,SAACC,GACNC,MAAMD,EAAEE,4CAKZ,OACI1D,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACXN,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,kBAAUC,KAAK8B,MAAME,WAArB,+GAGJnC,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YAAY0K,MAAO,CAACC,aAAc,SAC7CjL,EAAAC,EAAAC,cAAA,UAAQmF,QAASlF,KAAKyK,sBAAuBtF,GAAG,uBAAuBhF,UAAU,8BAAjF,4BAEJN,EAAAC,EAAAC,cAAA,OAAKoF,GAAG,oBAAoBhF,UAAU,yBAClCN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,uBACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,QACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACfN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cACPN,EAAAC,EAAAC,cAAA,SAAOqF,QAAQ,kBAAf,QACAvF,EAAAC,EAAAC,cAAA,UAAQoF,GAAG,iBAAiBhF,UAAU,gBAClCN,EAAAC,EAAAC,cAAA,UAAQ8D,MAAM,eAAd,mBACAhE,EAAAC,EAAAC,cAAA,UAAQ8D,MAAM,WAAd,YAIJhE,EAAAC,EAAAC,cAAA,SAAOqF,QAAQ,kBAAf,aACAvF,EAAAC,EAAAC,cAAA,SAAOoF,GAAG,iBAAiBhF,UAAU,eAAeyC,KAAK,SACzD/C,EAAAC,EAAAC,cAAA,SAAOqF,QAAQ,kBAAf,QACAvF,EAAAC,EAAAC,cAAA,SAAOoF,GAAG,iBAAiBhF,UAAU,eAAeyC,KAAK,OAAOyC,YAAY,SAC5ExF,EAAAC,EAAAC,cAAA,SAAOqF,QAAQ,yBAAf,eACAvF,EAAAC,EAAAC,cAAA,SAAOoF,GAAG,wBAAwBhF,UAAU,eAAeyC,KAAK,WAAWyC,YAAY,gBACvFxF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UAAQmF,QAASlF,KAAK0K,gBAAiBvK,UAAU,gCAAjD,uBAMnBH,KAAK8B,MAAM6I,WAAW3F,IAAI,SAAAM,GAAI,OAAIzF,EAAAC,EAAAC,cAAA,OAAK+C,IAAKwC,EAAKxC,KAAMwC,iDAOpE,IAAIyF,EAAgBpH,SAASC,eAAe,kBAAkBC,MAC1DmH,EAAuBrH,SAASC,eAAe,yBAAyBC,MACxEoH,EAAgBtH,SAASC,eAAe,kBAAkBC,MAC1DqH,EAAgBvH,SAASC,eAAe,kBAAkBC,MAC1DsH,EAAenL,KAAK6B,SAASmJ,GAAwBhL,KAAK6B,SAASkJ,GAAiB/K,KAAK6B,SAASoJ,GAAiBjL,KAAK6B,SAASqJ,GAErI/L,EAASkD,WAAWC,IAAI,cAAgB3C,EAAS,eAAiBwL,GAAcjH,IAAI,CAChFxD,YAAasK,EACbvK,KAAMsK,EACNnI,KAAMsI,EACNX,KAAMU,IAGVzH,QAAQC,IAAIsH,GAEZ/K,KAAKyK,wEAKL,IAAIjG,EAAeb,SAASC,eAAe,wBACvCwH,EAAezH,SAASC,eAAe,qBACvCc,EAAUF,EAAaG,UAC3BnB,QAAQC,IAAIiB,GACE,2BAAXA,GACC0G,EAAaxG,UAAUC,OAAO,UAC9BL,EAAaI,UAAUC,OAAO,eAC9BL,EAAaI,UAAUhE,IAAI,cAC3B4D,EAAaG,UAAY,UACR,UAAXD,IACN0G,EAAaxG,UAAUhE,IAAI,UAC3B4D,EAAaI,UAAUC,OAAO,cAC9BL,EAAaI,UAAUhE,IAAI,eAC3B4D,EAAaG,UAAY,4DAIxBR,GAGL,IAFA,IAAIC,EAAa,EAETC,EAAI,EAAGA,EAAIF,EAAQG,OAAQD,IAE/BD,GAAcD,EAAQI,WAAWF,GAGrC,OAAOD,SA9Jc9D,aIDvB+K,EAAQ,kBAAMxL,EAAAC,EAAAC,cAACuL,EAAD,OACdC,EAAa,kBAAM1L,EAAAC,EAAAC,cAACyL,EAAD,OACnBC,EAAU,kBAAM5L,EAAAC,EAAAC,cAAC2L,EAAD,OAChBC,EAAY,kBAAM9L,EAAAC,EAAAC,cAAC6L,EAAD,OAClBC,EAAa,kBAAMhM,EAAAC,EAAAC,cAAC+L,EAAD,OAmIVC,cA5Hb,SAAAA,EAAY9L,GAAM,IAAAe,EAAAC,OAAAC,EAAA,EAAAD,CAAAjB,KAAA+L,GAAA,OAChB/K,EAAAC,OAAAE,EAAA,EAAAF,CAAAjB,KAAAiB,OAAAG,EAAA,EAAAH,CAAA8K,GAAA1K,KAAArB,KAAMC,KAED+L,aAAehL,EAAKgL,aAAatK,KAAlBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KACpBA,EAAKiL,OAASjL,EAAKiL,OAAOvK,KAAZT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KACdA,EAAKc,MAAM,CACToK,YAAc,SACdC,aAAe,GACfC,UAAY,GACZC,YAAc,GACdC,aAAe,IAVDtL,4EAcLuL,GAEX,OAAQA,GACN,IAAK,YACHvM,KAAK+C,SAAS,CACZmJ,YAAc,SACdC,aAAe,GACfC,UAAY,GACZC,YAAc,GACdC,aAAe,KAEjB,MAEF,IAAK,aACHtM,KAAK+C,SAAS,CACZmJ,YAAc,GACdC,aAAe,SACfC,UAAY,GACZC,YAAc,GACdC,aAAe,KAEjB,MAEF,IAAK,UACHtM,KAAK+C,SAAS,CACZmJ,YAAc,GACdC,aAAe,GACfC,UAAY,SACZC,YAAc,GACdC,aAAe,KAEjB,MACF,IAAK,YACHtM,KAAK+C,SAAS,CACZmJ,YAAc,GACdC,aAAe,GACfC,UAAY,GACZC,YAAc,SACdC,aAAe,KAEjB,MACF,IAAK,aACHtM,KAAK+C,SAAS,CACZmJ,YAAc,GACdC,aAAe,GACfC,UAAY,GACZC,YAAc,GACdC,aAAe,6CAYlB5C,OAAOC,QAAQ,uCAChBxK,EAASmC,OAAOkL,UAChBxM,KAAKC,MAAMwM,eAAc,qCAIrB,IAAArK,EAAApC,KACN,OACEH,EAAAC,EAAAC,cAAC2M,EAAA,EAAD,KACE7M,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,iDACbN,EAAAC,EAAAC,cAAA,KAAGI,UAAU,eAAewM,KAAK,KAAjC,wBACA9M,EAAAC,EAAAC,cAAA,UAAQI,UAAU,iBAAiByC,KAAK,SAASgK,cAAY,WAAWC,cAAY,0BAA0BC,gBAAc,yBAAyBC,gBAAc,QAAQC,aAAW,qBACpLnN,EAAAC,EAAAC,cAAA,QAAMI,UAAU,yBAElBN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,2BAA2BgF,GAAG,0BAC3CtF,EAAAC,EAAAC,cAAA,MAAII,UAAU,sBACZN,EAAAC,EAAAC,cAAA,MAAII,UAAW,YAAcH,KAAK8B,MAAMoK,aACtCrM,EAAAC,EAAAC,cAACkN,EAAA,EAAD,CAAM/H,QAAS,kBAAM9C,EAAK4J,aAAa,cAAc7L,UAAU,WAAW+M,GAAG,KAA7E,cAEFrN,EAAAC,EAAAC,cAAA,MAAII,UAAW,YAAcH,KAAK8B,MAAMqK,cACtCtM,EAAAC,EAAAC,cAACkN,EAAA,EAAD,CAAM/H,QAAS,kBAAM9C,EAAK4J,aAAa,eAAe7L,UAAU,WAAW+M,GAAG,gBAA9E,eAEFrN,EAAAC,EAAAC,cAAA,MAAII,UAAW,YAAcH,KAAK8B,MAAMsK,WACtCvM,EAAAC,EAAAC,cAACkN,EAAA,EAAD,CAAM/H,QAAS,kBAAM9C,EAAK4J,aAAa,YAAY7L,UAAU,WAAW+M,GAAG,aAA3E,YAEFrN,EAAAC,EAAAC,cAAA,MAAII,UAAW,YAAcH,KAAK8B,MAAMuK,aACtCxM,EAAAC,EAAAC,cAACkN,EAAA,EAAD,CAAM/H,QAAS,kBAAM9C,EAAK4J,aAAa,cAAc7L,UAAU,WAAW+M,GAAG,eAA7E,cAEFrN,EAAAC,EAAAC,cAAA,MAAII,UAAW,YAAcH,KAAK8B,MAAMwK,cACtCzM,EAAAC,EAAAC,cAACkN,EAAA,EAAD,CAAM/H,QAAS,kBAAM9C,EAAK4J,aAAa,eAAe7L,UAAU,WAAW+M,GAAG,eAA9E,gBAGJrN,EAAAC,EAAAC,cAAA,QAAMI,UAAU,WACdN,EAAAC,EAAAC,cAAA,UAAQmF,QAASlF,KAAKiM,OAAQ9L,UAAU,8BAAxC,aAKJN,EAAAC,EAAAC,cAACoN,EAAA,EAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWjC,IACjCxL,EAAAC,EAAAC,cAACoN,EAAA,EAAD,CAAOC,KAAK,eAAeE,UAAW/B,IACtC1L,EAAAC,EAAAC,cAACoN,EAAA,EAAD,CAAOC,KAAK,YAAYE,UAAW7B,IACnC5L,EAAAC,EAAAC,cAACoN,EAAA,EAAD,CAAOC,KAAK,cAAcE,UAAW3B,IACrC9L,EAAAC,EAAAC,cAACoN,EAAA,EAAD,CAAOC,KAAK,eAAeE,UAAWzB,aAtHxBvL,aCqITiN,cAnJX,SAAAA,EAAYtN,GAAM,IAAAe,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAjB,KAAAuN,IACdvM,EAAAC,OAAAE,EAAA,EAAAF,CAAAjB,KAAAiB,OAAAG,EAAA,EAAAH,CAAAsM,GAAAlM,KAAArB,KAAMC,KACDuN,aAAexM,EAAKwM,aAAa9L,KAAlBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KACpBA,EAAKyM,eAAiBzM,EAAKyM,eAAe/L,KAApBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KACtBA,EAAK0M,eAAiB1M,EAAK0M,eAAehM,KAApBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KACtBA,EAAKc,MAAQ,CACT6L,QAAS,GANC3M,8EAWd,IAAI4M,EAAajK,SAASC,eAAe,eACrCiK,EAAalK,SAASC,eAAe,eACrCkK,EAAenK,SAASC,eAAe,iBACxC5D,KAAK8B,MAAM6L,QACVG,EAAanJ,UAAY,yBACzBiJ,EAAWhJ,UAAUhE,IAAI,UACzBiN,EAAWjJ,UAAUC,OAAO,UAC5B7E,KAAK+C,SAAS,CACV4K,QAAQ,EACRI,QAAQ,MAIZD,EAAanJ,UAAY,2BACzBiJ,EAAWhJ,UAAUC,OAAO,UAC5BgJ,EAAWjJ,UAAUhE,IAAI,UACzBZ,KAAK+C,SAAS,CACV4K,QAAQ,EACRI,QAAQ,8CAKJ,IAAA3L,EAAApC,KACRgO,EAAiBrK,SAASC,eAAe,kBACzCqK,EAAiBtK,SAASC,eAAe,kBAE7CzE,EAASmC,OAAO4M,2BAA2BF,EAAenK,MAAOoK,EAAepK,OAAOV,KAAK,WAExFf,EAAKnC,MAAMwM,eAAc,KAC1BrJ,MAAM,SAAC+K,GACN7K,MAAM6K,EAAM5K,oDAMJ,IAAAN,EAAAjD,KACRoO,EAAiBzK,SAASC,eAAe,kBACzCyK,EAAgB1K,SAASC,eAAe,iBACxC0K,EAAiB3K,SAASC,eAAe,kBACzC2K,EAAkB5K,SAASC,eAAe,mBAC1C4K,EAAiB7K,SAASC,eAAe,kBAIhB,KAAzB0K,EAAezK,OAA2C,KAAzBuK,EAAevK,OAAkBuK,EAAevK,QAAUwK,EAAcxK,OAEzGP,MAAM,iBAENnE,EAASmC,OAAOmN,+BAA+BH,EAAezK,MAAOuK,EAAevK,OAAOV,KAAK,WAC5FG,MAAM,WACNL,EAAKhD,MAAMwM,eAAc,GAEzB,IAAIpK,EAAWlD,EAASkD,WACpB1C,EAASR,EAASmC,OAAOC,YAAYC,IAC/Ba,EAASC,IAAI,aAAa3C,GAEhCuE,IAAI,CACJsC,MAAO8H,EAAezK,MACtBnE,UAAW6O,EAAgB1K,MAC3B6K,SAAUF,EAAe3K,UAG9BT,MAAM,SAAC+K,GACN,IAAIQ,EAAYR,EAAMS,KAClBC,EAAeV,EAAM5K,QAEzBD,MAAMuL,GACNrL,QAAQC,IAAIkL,MAIXP,EAAevK,QAAUwK,EAAcxK,MAC5CP,MAAM,0BAGNA,MAAM,2DAKV,OACIzD,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,sBACXN,EAAAC,EAAAC,cAAA,mCAGJF,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,OAAKoF,GAAG,aAAahF,UAAU,QAC3BN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aAEXN,EAAAC,EAAAC,cAAA,OAAKoF,GAAG,eACJtF,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cACXN,EAAAC,EAAAC,cAAA,SAAOoF,GAAG,iBAAiBhF,UAAU,eAAeyC,KAAK,OAAOyC,YAAY,UAC5ExF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAOoF,GAAG,iBAAiBhF,UAAU,eAAeyC,KAAK,WAAWyC,YAAY,cAEpFxF,EAAAC,EAAAC,cAAA,UAAQmF,QAASlF,KAAK0N,eAAgBvN,UAAU,gCAAhD,YAEJN,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UAAQoF,GAAG,gBAAgBhF,UAAU,oBAAoB+E,QAASlF,KAAKwN,cAAvE,0BACA3N,EAAAC,EAAAC,cAAA,OAAKoF,GAAG,cAAchF,UAAU,UAC5BN,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cACXN,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,SACXN,EAAAC,EAAAC,cAAA,SAAOoF,GAAG,kBAAkBhF,UAAU,eAAeyC,KAAK,OAAOyC,YAAY,WAEjFxF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,SACXN,EAAAC,EAAAC,cAAA,SAAOoF,GAAG,iBAAiBhF,UAAU,eAAeyC,KAAK,OAAOyC,YAAY,WAGpFxF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAOoF,GAAG,iBAAiBhF,UAAU,eAAeyC,KAAK,OAAOyC,YAAY,UAC5ExF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAOoF,GAAG,iBAAiBhF,UAAU,eAAeyC,KAAK,WAAWyC,YAAY,aAChFxF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAOoF,GAAG,gBAAgBhF,UAAU,eAAeyC,KAAK,WAAWyC,YAAY,aAEnFxF,EAAAC,EAAAC,cAAA,UAAQmF,QAASlF,KAAKyN,eAAgBtN,UAAU,gCAAhD,uBA1IRG,aCuFTwO,cA3EX,SAAAA,IAAa,IAAA9N,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAjB,KAAA8O,IACb9N,EAAAC,OAAAE,EAAA,EAAAF,CAAAjB,KAAAiB,OAAAG,EAAA,EAAAH,CAAA6N,GAAAzN,KAAArB,QACK+O,WAAa/N,EAAK+N,WAAWrN,KAAhBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KAClBA,EAAKgO,eAAiBhO,EAAKgO,eAAetN,KAApBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KACtBA,EAAKc,MAAQ,CACXmN,UAAU,GAGZ9P,EAASmC,OAAO4N,mBAAmB,SAACC,GAC/BA,EAAKnO,EAAK+B,SAAS,CAACkM,UAAS,IAC3BjO,EAAK+B,SAAS,CAACkM,UAAS,MAVlBjO,8EAgBAiO,GACbjP,KAAK+C,SAAS,CACZkM,SAAUA,gDAOZzL,QAAQC,IAAItE,EAASmC,OAAOC,kDAO5B,OAAGvB,KAAK8B,MAAMmN,SAGVpP,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACbN,EAAAC,EAAAC,cAAA,UAAQI,UAAU,cAClBN,EAAAC,EAAAC,cAAA,QAAMqP,IAAI,aAAazC,KAAK,cAC5B9M,EAAAC,EAAAC,cAAA,QAAM4M,KAAK,iFAAiFyC,IAAI,aAAaC,UAAU,0EAA0EC,YAAY,eAE7MzP,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACbN,EAAAC,EAAAC,cAACwP,EAAD,CAAW9C,cAAezM,KAAKgP,mBAOnCnP,EAAAC,EAAAC,cAACyP,EAAD,CAAWvF,KAAK,OAAOwC,cAAezM,KAAKgP,kDAM/C,OAAGhP,KAAK8B,MAAMmN,SAEVpP,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACbN,EAAAC,EAAAC,cAAA,UAAQI,UAAU,cAClBN,EAAAC,EAAAC,cAAA,QAAMqP,IAAI,aAAazC,KAAK,cAC5B9M,EAAAC,EAAAC,cAAA,QAAM4M,KAAK,iFAAiFyC,IAAI,aAAaC,UAAU,0EAA0EC,YAAY,eAE7MzP,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACbN,EAAAC,EAAAC,cAACwP,EAAD,CAAW9C,cAAezM,KAAKgP,mBAOnCnP,EAAAC,EAAAC,cAACyP,EAAD,CAAWvF,KAAK,OAAOwC,cAAezM,KAAKgP,wBAxEjC1O,aCAEmP,QACW,cAA7B/F,OAAOlJ,SAASkP,UAEe,UAA7BhG,OAAOlJ,SAASkP,UAEhBhG,OAAOlJ,SAASkP,SAASC,MACvB,2DCZNC,IAASC,OAAOhQ,EAAAC,EAAAC,cAAC+P,EAAD,MAASnM,SAASC,eAAe,SDuH3C,kBAAmBmM,WACrBA,UAAUC,cAAcC,MAAM9M,KAAK,SAAA+M,GACjCA,EAAaC","file":"static/js/main.d7b8ca75.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import * as firebase from 'firebase';\n\n// Initialize Firebase\nvar config = {\n    apiKey: \"AIzaSyCPAMJAU1OWXPzwRMOXV32r0F1B9vNKvMc\",\n    authDomain: \"landlordapplication-6cf45.firebaseapp.com\",\n    databaseURL: \"https://landlordapplication-6cf45.firebaseio.com\",\n    projectId: \"landlordapplication-6cf45\",\n    storageBucket: \"landlordapplication-6cf45.appspot.com\",\n    messagingSenderId: \"603341312541\"\n};\nfirebase.initializeApp(config);\n\nexport default firebase;\n\n","import React,{Component} from 'react';\n\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport firebase from '../components/firebase';\nimport Notification from \"../components/Notification\";\nimport Event from '../components/Event';\n\nimport {faBell} from '@fortawesome/free-solid-svg-icons';\nimport {faCalendar} from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(faBell);\nlibrary.add(faCalendar);\n\nlet firebase_database;\n\nlet firstname, userId;\n\nclass Dashboard extends Component{\n\n    constructor(){\n        super();\n        userId = firebase.auth().currentUser.uid;\n        this.toggleNewEventBox = this.toggleNewEventBox.bind(this);\n        this.submitEvent = this.submitEvent.bind(this);\n        this.hashCode = this.hashCode.bind(this);\n        this.state ={\n            first_name: \"\",\n            events: [],\n            notifications: [],\n            notifications: [<Notification></Notification>]\n        }\n    }\n\n    componentWillMount(){\n\n        // Get and build notifications\n\n        \n        let notificationsRef = firebase.database().ref(\"/landlords/\" + userId + \"/notifications/\");\n\n        notificationsRef.on(\"value\", (snapshot) => {\n            let notifications = [];\n            snapshot.forEach((child) => {\n                let header;\n                switch (child.val().type) {\n                    case (\"work_order\") : \n                        header = \"Work Order\";\n                    break;\n                    case (\"rent\"):\n                        header = \"Rent\"\n                    break;\n                    default:\n                        header = \"Notification\"\n                    break;\n\n                }\n\n                notifications.push(<Notification key={child.key}\n                                                 origin={child.val().origin}\n                                                 header={header}\n                                                 text={child.val().text}    \n                                                     ></Notification>); \n                \n            });\n            this.setState({notifications: notifications});\n        });\n\n        // Get and build events\n\n        \n        let eventsRef = firebase.database().ref(\"/landlords/\" + userId + \"/events/\");\n\n        eventsRef.on(\"value\", (snapshot) => {\n            let events = [];\n            snapshot.forEach((child) => {\n                let header;\n                switch (child.val().type) {\n                    case (\"maintenance\") : \n                        header = \"Maintenance\";\n                    break;\n                    case (\"visitor\"):\n                        header = \"Visitor\"\n                        break;\n                    default:\n                        header = \"Event\"\n                    break;\n\n                }\n\n                events.push(<Event key={child.key}\n                                                 location={child.val().location}\n                                                 header={header}\n                                                 description={child.val().description}\n                                                 time={child.val().time}    \n                                                     ></Event>); \n                \n            });\n            this.setState({events: events});\n        });\n\n        // console.log(events);\n        \n        // this.setState({\n        //     notifications: notifications,\n        //     events: events\n        // });\n    }\n\n    componentDidMount() {\n        firstname = firebase.database().ref(\"/landlords/\" + userId).once(\"value\")\n        .then((snapshot) => {\n          firstname = snapshot.val().firstname;\n          this.setState({\n            first_name: firstname\n          });\n        }).catch((e) => {\n            alert(e.message);\n        });\n\n        console.log(this.hashCode(\"Hello World\"));\n        \n    }\n\n    submitEvent(){\n        let eventDate = document.getElementById(\"event_date\").value;\n        let eventDescription = document.getElementById(\"event_description\").value;\n        let eventLocation = document.getElementById(\"event_location\").value;\n        let eventType = document.getElementById(\"event_type\").value;\n\n        if(eventDate != \"\" && eventDescription != \"\" && eventLocation != \"\" && eventType != \"\"){\n\n            let eventKey = this.hashCode(eventDescription) + this.hashCode(eventDate) + this.hashCode(eventLocation) + this.hashCode(eventType);\n\n            firebase.database().ref(\"/landlords/\" + userId + \"/events/\" + eventKey).set({\n                description: eventDescription,\n                time: eventDate,\n                type: eventType,\n                location: eventLocation \n            });\n\n            console.log(eventDate);\n\n            this.toggleNewEventBox();\n        }\n\n\n    }\n    // Not a real hash but guarantees a unique ID\n    hashCode(mString) {\n        let returnable = 0;\n        \n        for(let x = 0; x < mString.length; x++)\n        {\n            returnable += mString.charCodeAt(x);\n        }\n\n        return returnable;\n      };\n\n    toggleNewEventBox(){\n        let toggleButton = document.getElementById(\"new_event_button\");\n        let eventBox = document.getElementById(\"new_event_box\");\n        let btnText = toggleButton.innerHTML;\n\n        if(btnText == \"Add Event +\"){\n            eventBox.classList.remove(\"hidden\");\n            toggleButton.classList.remove(\"btn-primary\");\n            toggleButton.classList.add(\"btn-danger\");\n            toggleButton.innerHTML = \"cancel\";\n        } else if(btnText == \"cancel\"){\n            eventBox.classList.add(\"hidden\");\n            toggleButton.classList.remove(\"btn-danger\");\n            toggleButton.classList.add(\"btn-primary\");\n            toggleButton.innerHTML = \"Add Event +\";\n        }\n    }\n\n\n    render(){\n        console.log(this.state.notifications);\n        \n        return(\n            <div>\n                <div className=\"jumbotron\">\n                    <h2>Dashboard</h2>\n                    <hr></hr>\n                    <p>Hello {this.state.first_name}, this is your Dashboard! From here you can see notifications and important information. Take a look around!</p>\n                    \n                </div>\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-sm-12 col-md-6\">\n                            <div className=\"card\">\n                                <div className=\"card-body\">\n                                    <h2 className=\"card-title\"><FontAwesomeIcon icon=\"bell\"></FontAwesomeIcon> Notifications</h2>\n                                    <hr></hr>\n                                    {this.state.notifications.map(not => <div key={not.key}>{not}</div>)}\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-sm-12 col-md-6\">\n                            <div className=\"card\">\n                                <div className=\"card-body\">\n                                    <h2 className=\"card-title\"><FontAwesomeIcon icon=\"calendar\"></FontAwesomeIcon> Upcoming Events <button onClick={this.toggleNewEventBox} id=\"new_event_button\" className=\"btn float-right btn-primary\">Add Event +</button> </h2>\n                                    <div id=\"new_event_box\" className=\"form-group hidden\">\n                                        <label htmlFor=\"event_type\">Type</label>\n                                        <select id=\"event_type\" className=\"form-control\">\n                                            <option value=\"maintenance\">Maintenance</option>\n                                            <option value=\"visitor\">Visitor</option>\n                                        </select>\n\n                                        <label htmlFor=\"event_date\">Date</label>\n                                        <input id=\"event_date\" className=\"form-control\" type=\"date\"></input>\n                                        <label htmlFor=\"event_location\">Location</label>\n                                        <input id=\"event_location\" className=\"form-control\" type=\"text\" placeholder=\"Location\"></input>\n                                        <label htmlFor=\"event_description\">Description</label>\n                                        <input id=\"event_description\" className=\"form-control\" type=\"textarea\" placeholder=\"Description\" ></input>\n                                        <br></br>\n                                        <button onClick={this.submitEvent} className=\"btn btn-success align_center\">Add Event</button>\n                                    </div>\n                                    <hr></hr>\n                                    {this.state.events.map(evnt => <div key={evnt.key}>{evnt}</div>)}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n\n}\nexport default Dashboard;","import React, {Component} from 'react';\n\n\nclass Notification extends Component{\n\n    render(){\n        return(\n            <div>\n                <h3>{this.props.header} <br></br><small className=\"work_order_text\" >{this.props.text}</small></h3>\n                <p>{this.props.origin}</p>\n                <hr></hr>\n            </div>\n        );\n    }\n\n}\n\nexport default Notification;","import React, {Component} from 'react';\n\n// Props = {header, location, time, description}\n\n\nclass Event extends Component{\n    \n    render(){\n        return(\n            <div>\n                <h3>{this.props.header}</h3>\n                <b>{this.props.location} | {this.props.time}</b>\n                <p>{this.props.description}</p>\n                <hr></hr>\n            </div>\n        );\n    }\n}\n\nexport default Event;","import React, {Component} from 'react';\n\nimport firebase from \"../components/firebase\";\nimport InfoModal from '../components/InfoModal';\n\nlet userId;\n\n\nclass PropertyCard extends Component{\n\n    constructor(){\n        super();\n        this.hashCode = this.hashCode.bind(this);\n        this.toggleTenantForm = this.toggleTenantForm.bind(this);\n        this.submitTenant = this.submitTenant.bind(this);\n        this.showTenantsModal = this.showTenantsModal.bind(this);\n        this.showWorkOrdersModal = this.showWorkOrdersModal.bind(this);\n        this.hideModal = this.hideModal.bind(this);\n        userId = firebase.auth().currentUser.uid;\n        this.state = {\n            InfoModal: \"\"\n        };\n    }\n\n    // Not a real hash but guarantees a unique ID\n    hashCode(mString) {\n        let returnable = 0;\n        \n        for(let x = 0; x < mString.length; x++)\n        {\n            returnable += mString.charCodeAt(x);\n        }\n\n        return returnable;\n    };\n\n    hideModal(){\n        this.setState({\n            InfoModal: \"\"\n        });\n\n    }\n\n        \n\n\n    toggleTenantForm(){\n        let newTenantFormBtn = document.getElementById('toggle-tenant-btn' + this.props.prop_key);\n        let newTenantForm = document.getElementById('new-tenant-form' + this.props.prop_key);\n        if(newTenantFormBtn.innerHTML === \"Add Tenant +\"){\n            newTenantForm.classList.remove(\"hidden\");\n            newTenantFormBtn.innerHTML = \"Cancel\";\n            newTenantFormBtn.classList.remove(\"btn-primary\");\n            newTenantFormBtn.classList.add(\"btn-danger\");\n        }\n        else{\n            newTenantForm.classList.add(\"hidden\");\n            newTenantFormBtn.innerHTML = \"Add Tenant +\";\n            newTenantFormBtn.classList.add(\"btn-primary\");\n            newTenantFormBtn.classList.remove(\"btn-danger\");\n        }\n    }\n\n    showTenantsModal(){\n        let tenants = [];\n        firebase.database().ref(\"/landlords/\" + userId + \"/properties/\" + this.props.prop_key + \"/tenants/\").once(\"value\", (snapshot)=> {\n            snapshot.forEach(child => {\n                \n                let tenantKey = this.hashCode(child.val().first + child.val().last + child.val().phone + child.val().email);\n                tenants.push(\n                <div key={tenantKey}>{child.val().first + \" \" + child.val().last + \" | \" + child.val().phone + \" | \" + child.val().email + \" | $\" + child.val().rent} <hr></hr></div>\n                );\n            });\n            console.log(tenants);\n\n            let renderable = tenants.map(ten => <div key={ten.key}>{ten}</div>);\n            \n            console.log(renderable);\n            \n\n            this.setState({\n                InfoModal: <InfoModal title=\"Tenants\" content={renderable} hideModal={this.hideModal}></InfoModal>\n            });\n        });\n    }\n\n    showWorkOrdersModal(){\n        let workOrders = [];\n        firebase.database().ref(\"/landlords/\" + userId + \"/properties/\" + this.props.prop_key + \"/work_orders/\").once(\"value\", (snapshot) => {\n            snapshot.forEach(child => {\n                \n                let workOrderKey = this.hashCode(child.val().date + child.val().description + child.val().origin);\n\n                workOrders.push(\n                    <div key={workOrderKey}>\n                        <h3>{child.val().origin}</h3> \n                        <span className=\"subtitle\">{child.val().date}</span>\n                        <br></br>\n                        {child.val().description}  \n                        <hr></hr>\n                    </div>\n                );\n            });\n            let renderable = workOrders.map(wo => <div key={wo.key}>{wo}</div>);\n\n            this.setState({\n                InfoModal: <InfoModal title=\"Work Orders\" content={renderable} hideModal={this.hideModal}></InfoModal>\n            });\n\n        });\n    }\n\n\n\n    submitTenant(){\n        let tenantEmail = document.getElementById('tenant-email' + this.props.prop_key).value;\n        let tenantFirst = document.getElementById('tenant-first' + this.props.prop_key).value;\n        let tenantLast = document.getElementById('tenant-last' + this.props.prop_key).value;\n        let tenantRent = document.getElementById('tenant-rent' + this.props.prop_key).value;\n        let tenantPhone = document.getElementById('tenant-phone' + this.props.prop_key).value;\n        let tenantKey =this.hashCode(tenantEmail) + this.hashCode(tenantFirst) + this.hashCode(tenantLast) + this.hashCode(tenantRent) + this.hashCode(tenantPhone);\n        \n        if(tenantEmail !== \"\" &&tenantFirst !== \"\" &&tenantLast !== \"\" &&tenantRent !== \"\" &&tenantPhone !== \"\" ){\n            firebase.database().ref(\"/landlords/\" + userId + \"/properties/\" + this.props.prop_key + \"/tenants/\" + tenantKey).set({\n                email: tenantEmail,\n                first: tenantFirst,\n                last: tenantLast,\n                rent: tenantRent,\n                phone: tenantPhone\n            });\n            alert(\"Tenant added!\")\n        }\n        else{\n            alert(\"Please fill out all of the fields!\");\n        }\n    \n    }\n\n    render(){\n        return(\n            <div>\n                {this.state.InfoModal}\n                <div className=\"card prop_card\">\n                    <div className=\"card-body\">\n                        <h3 className=\"card-title\">{this.props.address}</h3>\n                        <h4 className=\"subtitle\"><span className=\"category-bold\">Delinquent: </span>{this.props.delinquent_tenants} <span className=\"category-bold\">Paid: </span>{this.props.paid_tenants} <span className=\"category-bold\">Work Orders: </span>{this.props.maintenance_requests} <span className=\"category-bold\">Monthly Rent: </span>{this.props.monthly_rent} </h4>\n                        <hr></hr>\n                        <div className=\"d-flex justify-content-center\">\n                            <button onClick={this.showTenantsModal} className=\"prop-btn btn btn-default\">View Tenants</button>\n                            <button onClick={this.showWorkOrdersModal} className=\"prop-btn btn btn-default\">View Work Orders</button>\n                            <button onClick={this.toggleTenantForm} id={\"toggle-tenant-btn\" + this.props.prop_key} className=\"prop-btn btn btn-primary\">Add Tenant +</button>\n                        </div>\n                        <div id={\"new-tenant-form\" + this.props.prop_key} className=\"card hidden\">\n                            <div className=\"card-body\">\n                            <h4 className=\"card-title\">New Tenant</h4>\n                            <hr></hr>\n                                <form className=\"form-group\">\n                                    <div className=\"row\">\n                                        <div className=\"col-12\">\n                                            <input id={\"tenant-email\" + this.props.prop_key} className=\"form-control\" type=\"email\" placeholder=\"email\"></input>\n                                        </div>\n                                    </div>\n                                    <br></br>\n                                    <div className=\"row\">\n\n                                        <div className=\"col-sm-6\">\n                                            <input id={\"tenant-first\" + this.props.prop_key} className=\"form-control\" type=\"text\" placeholder=\"First\"></input>\n                                        </div>\n\n                                        <div className=\"col-sm-6\">\n                                            <input id={\"tenant-last\" + this.props.prop_key} className=\"form-control\" type=\"text\" placeholder=\"Last\"></input>\n                                        </div>\n\n                                    </div>\n                                    <br></br>\n                                    <div className=\"row\">\n\n                                        <div className=\"col-sm-6\">\n                                            <input id={\"tenant-rent\" + this.props.prop_key} className=\"form-control\" type=\"number\" placeholder=\"Rent/Month\"></input>\n                                        </div>\n\n                                        <div className=\"col-sm-6\">\n                                            <input id={\"tenant-phone\" + this.props.prop_key} className=\"form-control\" type=\"phone\" placeholder=\"Phone Number\"></input>\n                                        </div>\n\n                                    </div>\n                                    <br></br>\n                                    <div className=\"row\">\n                                        <div className=\"col-12\">\n                                            <button onClick={this.submitTenant} className=\"btn btn-success\">Add Tenant +</button>\n                                        </div>\n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nexport default PropertyCard;","import React,{Component} from 'react';\n\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport firebase from '../components/firebase';\nimport PropertyCard from '../components/PropertyCard'\n\nlet userId, userRef;\n\nclass PropertiesPage extends Component{\n\n    constructor(){\n        super();\n\n        this.state = {\n            first_name: \"\",\n            properties: []\n        }\n        userId = firebase.auth().currentUser.uid;\n        userRef = firebase.database().ref(\"/landlords/\" + userId);\n        this.togglePropertyForm = this.togglePropertyForm.bind(this);\n        this.submitNewProperty = this.submitNewProperty.bind(this);\n    }\n\n    togglePropertyForm(){\n        let togglePropertyFormButton = document.getElementById('propFormBtn');\n        let propertyForm = document.getElementById('propForm');\n        if(togglePropertyFormButton.innerHTML == \"Add Property +\"){\n            propertyForm.classList.remove(\"hidden\");\n            togglePropertyFormButton.classList.add(\"btn-danger\");\n            togglePropertyFormButton.classList.remove(\"btn-primary\");\n            togglePropertyFormButton.innerHTML = \"Cancel\";\n        }\n        else{\n            propertyForm.classList.add(\"hidden\");\n            togglePropertyFormButton.classList.remove(\"btn-danger\");\n            togglePropertyFormButton.classList.add(\"btn-primary\");\n            togglePropertyFormButton.innerHTML = \"Add Property +\";\n        }\n    }\n \n    submitNewProperty(){\n\n        let address = document.getElementById('addressInput').value;\n        let delinquent = document.getElementById('delinquentInput').value;\n        let paid = document.getElementById('paidTotalInput').value;\n        let rent = document.getElementById('rentTotalInput').value;\n        let workOrders = document.getElementById('workOrderInput').value;\n\n        if(address !== \"\" && delinquent !== \"\" && paid !== \"\" && rent !== \"\" && workOrders !== \"\"){\n            let propertyKey = this.hashCode(address) + this.hashCode(delinquent) + this.hashCode(paid) + this.hashCode(rent) + this.hashCode(workOrders);\n\n            firebase.database().ref('/landlords/' + userId + '/properties/' + propertyKey).set({\n                address: address,\n                delinquent_tenants: delinquent,\n                paid_tenants: paid,\n                monthly_rent: rent,\n                work_orders: workOrders\n            });\n\n        }\n\n    }\n     // Not a real hash but guarantees a unique ID\n     hashCode(mString) {\n        let returnable = 0;\n        \n        for(let x = 0; x < mString.length; x++)\n        {\n            returnable += mString.charCodeAt(x);\n        }\n\n        return returnable;\n      };\n\n    componentWillMount(){\n        \n        firebase.database().ref(\"/landlords/\" + userId).once(\"value\")\n        .then((snapshot) => {\n          let firstname = snapshot.val().firstname;\n          this.setState({\n            first_name: firstname\n          });\n        }).catch((e) => {\n            alert(e.message);\n        });\n    }\n\n\n    componentDidMount(){\n        firebase.database().ref('/landlords/'+userId+\"/properties\").on(\"value\", (snapshot) => {\n            let properties = [];\n            snapshot.forEach(child => {\n                console.log(child);\n                \n                properties.push(<PropertyCard \n                    key={child.key}\n                    address={child.val().address} \n                    prop_key={child.key}\n                    delinquent_tenants={child.val().delinquent_tenants}\n                    maintenance_requests={child.val().maintenance_requests}\n                    monthly_rent={child.val().monthly_rent}\n                    paid_tenants={child.val().paid_tenants} ></PropertyCard>)\n            });\n            this.setState({\n                properties: properties\n            });\n        });\n    }\n\n\n    render(){\n\n\n\n        return(\n            <div>\n                <div className=\"jumbotron\">\n                    <h2>Properties</h2>\n                    <hr></hr>\n                    <p>Hello {this.state.first_name}, this is your Properties Page! From this page you can manage the properties that you currently own and view information about each.</p>\n                    \n                </div>\n                <div className=\"container\">\n                    <div className=\"col-sm-12\">\n                        <button id=\"propFormBtn\" onClick={this.togglePropertyForm} className=\"btn btn-primary full-width\">Add Property +</button>\n                        <form id=\"propForm\" className=\"form-group container hidden\">\n                            <hr></hr>\n                            <h3>New Property</h3>\n                            <hr></hr>\n                            <div className=\"row\">\n                                <input id=\"addressInput\" className=\"form-control\" type=\"text\" placeholder=\"Address\"></input>\n                            </div>\n                            <br></br>\n                            <div className=\"row\">\n                                <input id=\"delinquentInput\" className=\"prop-field form-control col-sm-2 col-6\" type=\"number\" placeholder=\"Delinquent\"></input>\n                                <input id=\"workOrderInput\" className=\"prop-field form-control col-sm-2 col-6\" type=\"number\" placeholder=\"Work Orders\"></input>\n                                <input id=\"rentTotalInput\" className=\"prop-field form-control col-sm-2 col-6\" type=\"number\" placeholder=\"Rent Total\"></input>\n                                <input id=\"paidTotalInput\" className=\"prop-field form-control col-sm-2 col-6\" type=\"number\" placeholder=\"Paid Tenants\"></input>\n                                <button onClick={this.submitNewProperty} id=\"submitForm\" className=\"prop-field btn btn-success\" >Add Property</button>\n                            </div>\n                            <hr></hr>\n                        </form>\n                    </div>\n                    {this.state.properties.map(proper => <div key={proper.key}>{proper}</div>)}\n                </div>\n            </div>\n        );\n    }\n\n\n}\nexport default PropertiesPage;","import React, {Component} from 'react';\nimport firebase from '../components/firebase';\n\nlet userId;\nlet tenantList = [];\n\nclass TenantsPage extends Component{\n\n    constructor(){\n        super();\n\n        this.getPropertyList = this.getPropertyList.bind(this);\n        this.toggleEditBox = this.toggleEditBox.bind(this);\n        this.selectedTenant = this.selectedTenant.bind(this);\n        this.removeTenant = this.removeTenant.bind(this);\n        this.addTenant = this.addTenant.bind(this);\n        this.toggleNewTenantBox = this.toggleNewTenantBox.bind(this);\n        this.submitTenant = this.submitTenant.bind(this);\n        this.markDelinquent = this.markDelinquent.bind(this);\n        this.markPaid = this.markPaid.bind(this);\n        userId = firebase.auth().currentUser.uid;\n\n        this.state = {\n            properties: [],\n            selected_tenant: \"\"\n        };\n\n    }\n\n    toggleEditBox(boxId){\n        let box = document.getElementById(\"edit-box-\" + boxId);\n        let managebtn = document.getElementById(\"manage-btn-\" + boxId);\n\n        if(box.classList.contains(\"hidden\")){\n            box.classList.remove(\"hidden\");\n            managebtn.classList.remove(\"btn-primary\");\n            managebtn.classList.add(\"btn-danger\");\n            managebtn.innerHTML = \"Cancel\";\n            this.setState({\n                managing: true\n            });\n        }\n\n        else{\n            box.classList.add(\"hidden\");\n            managebtn.classList.add(\"btn-primary\");\n            managebtn.classList.remove(\"btn-danger\");\n            managebtn.innerHTML = \"Manage\";\n            this.setState({\n                managing: false\n            });\n            let arr = document.getElementsByClassName(\"tenant-row\");\n            let arrLength = arr.length;\n    \n            for(let i = 0; i < arrLength; i++){\n                arr[i].classList.remove(\"highlighted\");\n            }\n        }\n\n    }\n\n    addTenant(){\n\n    }\n    removeTenant(propertyKey){\n        if(this.state.selected_tenant === \"\"){\n            alert(\"Please select a tenant!\");\n        }\n        else{\n            if(window.confirm(\"Are you sure you want to delete this tenant?\")){\n                firebase.database().ref(\"/landlords/\" + userId + \"/properties/\" + propertyKey + \"/tenants/\" + this.state.selected_tenant).remove();\n                this.getPropertyList();\n            }\n        }\n    }\n\n    // Not a real hash but guarantees a unique ID\n    hashCode(mString) {\n        let returnable = 0;\n        \n        for(let x = 0; x < mString.length; x++)\n        {\n            returnable += mString.charCodeAt(x);\n        }\n\n        return returnable;\n      };\n\n    selectedTenant(selectedTenant, boxId){\n        if(this.state.managing){\n\n            this.setState({\n                selected_tenant: selectedTenant\n            }); \n            let arr = document.getElementsByClassName(\"tenant-row\");\n            let arrLength = arr.length;\n    \n            for(let i = 0; i < arrLength; i++){\n                arr[i].classList.remove(\"highlighted\");\n            }\n            \n            // .forEach(row => {\n            //     row.classList.remove(\"highlighted\");\n            // });\n            document.getElementById(boxId + \"\" + selectedTenant).classList.add(\"highlighted\");\n\n        }\n        \n    }\n\n    toggleNewTenantBox(boxId){\n        let tenantBox = document.getElementById(\"new-tenant-box-\"+boxId);\n        let addTenantsButton = document.getElementById(\"new-tenant-btn-\" + boxId);\n\n\n        if(tenantBox.classList.contains(\"hidden\")){\n            tenantBox.classList.remove(\"hidden\");\n            addTenantsButton.classList.add(\"btn-danger\");\n            addTenantsButton.classList.remove(\"btn-primary\");\n            addTenantsButton.innerHTML = \"Cancel\";\n        }\n        else{\n            tenantBox.classList.add(\"hidden\");\n            addTenantsButton.classList.remove(\"btn-danger\");\n            addTenantsButton.classList.add(\"btn-primary\");\n            addTenantsButton.innerHTML = \"Add Tenant +\";\n        }\n    }\n\n    markPaid(){\n        alert(\"Tenant marked as paid. Well... at least they will be in the final version. Stay tuned :-)\");\n    }\n\n    markDelinquent(){\n        alert(\"Tenant marked as delinquent. Well... at least they will be in the final version. Stay tuned :-)\");\n    }\n\n    submitTenant(boxId){\n        let tenantEmail = document.getElementById(\"tenant-email-\" + boxId).value;\n        let tenantFirst =document.getElementById(\"tenant-first-\" + boxId).value;\n        let tenantLast = document.getElementById(\"tenant-last-\" + boxId).value;\n        let tenantPhone = document.getElementById(\"tenant-phone-\" + boxId).value;\n        let tenantRent = document.getElementById(\"tenant-rent-\" + boxId).value;\n        \n        if(tenantEmail !== \"\" && tenantFirst !== \"\" && tenantLast !== \"\" && tenantPhone !== \"\" && tenantRent !== \"\" ){\n\n            let tenantKey = this.hashCode(tenantFirst + tenantLast + tenantEmail + tenantPhone);\n\n            firebase.database().ref(\"/landlords/\" + userId + \"/properties/\" + boxId + \"/tenants/\" + tenantKey).set({\n                first: tenantFirst,\n                last: tenantLast,\n                email: tenantEmail,\n                phone: tenantPhone,\n                rent: tenantRent\n            });\n\n            alert( tenantFirst + \" \" + tenantLast + \" was added successfully!\");\n\n        }\n        else{\n            alert(\"Please fill out all fields!\")\n        }        \n        \n    }\n\n    getPropertyList(callback){\n        let properties = [];\n        firebase.database().ref('/landlords/'+userId+\"/properties\").once(\"value\", (snapshot) => {\n            \n            snapshot.forEach(child => {\n                console.log(child);\n                let tenants = [];\n                firebase.database().ref('/landlords/' + userId + \"/properties/\" + child.key + \"/tenants\").once(\"value\", (_tenants) => {\n                    \n                    _tenants.forEach(tenant => {\n                        console.log(child.val().email);\n                        tenants.push({\n                            key : tenant.key,\n                            name: tenant.val().first + \" \" + tenant.val().last,\n                            email: tenant.val().email,\n                            phone : tenant.val().phone,\n                            rent: tenant.val().rent\n                        });\n                    });\n                    // properties.push({\n                    //     key: child.key,\n                    //     address: child.val().address,\n                    //     tenants: tenants\n                    // });\n                    properties.push(\n                    <div>\n                        <hr></hr>\n                        <div className=\"row\">\n                            <div className=\"col-6 col-sm-8\">\n                                <h3>{child.val().address}</h3>\n                            </div>\n                            <div className=\"col-6 col-sm-4\">\n                                <button id={\"manage-btn-\" + child.key} onClick={()=>this.toggleEditBox(child.key)} className=\"tenant-manage-btn btn btn-primary float-right\">Manage</button>\n                            </div>\n                        </div>\n                        <div id={\"edit-box-\"+child.key} className=\"row hidden\">\n                            <div className=\"col-sm-12\">\n                                <button onClick={this.markPaid} className=\"btn btn-success tenant-manage-btn float-right\">Mark Paid</button>\n                                <button onClick={this.markDelinquent} className=\"btn btn-warning tenant-manage-btn float-right\">Mark Delinquent</button>\n                                <button id={\"new-tenant-btn-\"+child.key} onClick={() => this.toggleNewTenantBox(child.key)} className=\"btn btn-primary tenant-manage-btn float-right\">Add Tenant +</button>\n                                <button onClick={() => this.removeTenant(child.key)} className=\"btn btn-danger tenant-manage-btn float-right\">Remove Tenant -</button>\n                            </div>\n                        </div>\n                        <div id={\"new-tenant-box-\" + child.key} className=\"hidden\">\n                            <h4>New Tenant</h4>\n                            <hr></hr>\n                            <form className=\"form-group\">\n                                <div className=\"row\">\n                                    <div className=\"col-12\">\n                                        <input id={\"tenant-email-\" + child.key} className=\"form-control\" type=\"email\" placeholder=\"email\"></input>\n                                    </div>\n                                </div>\n                                <br></br>\n                                <div className=\"row\">\n\n                                    <div className=\"col-sm-6\">\n                                        <input id={\"tenant-first-\" + child.key} className=\"form-control\" type=\"text\" placeholder=\"First\"></input>\n                                    </div>\n\n                                    <div className=\"col-sm-6\">\n                                        <input id={\"tenant-last-\" + child.key} className=\"form-control\" type=\"text\" placeholder=\"Last\"></input>\n                                    </div>\n\n                                </div>\n                                <br></br>\n                                <div className=\"row\">\n\n                                    <div className=\"col-sm-6\">\n                                        <input id={\"tenant-rent-\" + child.key} className=\"form-control\" type=\"number\" placeholder=\"Rent/Month\"></input>\n                                    </div>\n\n                                    <div className=\"col-sm-6\">\n                                        <input id={\"tenant-phone-\" + child.key} className=\"form-control\" type=\"phone\" placeholder=\"Phone Number\"></input>\n                                    </div>\n\n                                </div>\n                                <br></br>\n                                <div className=\"row\">\n                                    <div className=\"col-12\">\n                                        <button onClick={() => this.submitTenant(child.key)} className=\"btn btn-success\">Add Tenant +</button>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                        \n                        <table className=\"tenant-table\">\n                            <th>Name</th><th>Phone</th><th>Email</th><th>Rent</th>\n                            {tenants.map(ten => <tr id={child.key + \"\" + ten.key} onClick={() => this.selectedTenant(ten.key, child.key)} className=\"tenant-row\" key={ten.key}><td>{ten.name}</td><td>{ten.phone}</td> <td>{ten.email}</td> <td>${ten.rent}</td> </tr>)}\n                        </table>\n                        \n                    </div>)\n                   this.setState({\n                    properties: properties\n                   }) ;\n                });\n                \n            });  \n\n        });\n       \n    }\n\n\n    componentWillMount(){        \n        this.getPropertyList();\n    }\n\n    render(){\n        return(\n            <div>\n                <div className=\"jumbotron\">\n                    <h2>Tenants</h2>\n                    <hr></hr>\n                    <p>Hello Landlord, this is your Tenants Page! From this page you can manage the status of the tenants living in your properties.</p>\n                    \n                </div>\n                <div className=\"container\">\n                    {this.state.properties.map(proper => <div key={proper.key}>{proper}</div>)}\n                </div>\n            </div>\n        );\n    }\n\n}\n\nexport default TenantsPage;","import React, {Component} from 'react';\n\nimport firebase from '../components/firebase';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport WorkOrder from '../components/WorkOrder';\n\nlet firebase_database;\n\nlet firstname, userId;\n\nclass WorkOrdersPage extends Component{\n\n    constructor(){\n        super();\n        userId = firebase.auth().currentUser.uid;\n        this.toggleNewWorkOrderBox = this.toggleNewWorkOrderBox.bind(this);\n        this.submitWorkOrder = this.submitWorkOrder.bind(this);\n        this.hashCode = this.hashCode.bind(this);\n\n\n        this.state ={\n            first_name: \"\"\n        }\n    }\n    componentWillMount(){\n\n        // Get and build work orders\n\n        let workorders = [];\n        let workordersRef = firebase.database().ref(\"/landlords/\" + userId + \"/workorders/\");\n\n        workordersRef.on(\"value\", (snapshot) => {\n            snapshot.forEach((child) => {\n                let header;\n                switch (child.val().type) {\n                    case (\"maintenance\") : \n                        header = \"Maintenance\";\n                    break;\n                    case (\"upgrade\"):\n                        header = \"Upgrade\"\n                        break;\n                    default:\n                        header = \"Work Order\"\n                    break;\n\n                }\n\n                workorders.push(<WorkOrder key={child.key}\n                                                 unit={child.val().unit}\n                                                 header={header}\n                                                 tempkey={child.key}\n                                                 description={child.val().description}\n                                                 time={child.val().time}    \n                                                     ></WorkOrder>); \n                \n            });\n            this.setState({workorders: workorders});\n        });\n\n        console.log(workorders);\n        \n        this.setState({\n            workorders: workorders\n        });\n    }\n\n    componentDidMount() {\n        firstname = firebase.database().ref(\"/landlords/\" + userId).once(\"value\")\n        .then((snapshot) => {\n          firstname = snapshot.val().firstname;\n          this.setState({\n            first_name: firstname\n          });\n        }).catch((e) => {\n            alert(e.message);\n        });\n    }\n    \n    render(){\n        return(\n            <div>\n                <div className=\"jumbotron\">\n                    <h2>Work Orders</h2>\n                    <hr></hr>\n                    <p>Hello {this.state.first_name}, this is your WorkOrders Page! When tenants submit work orders for your properties they will appear here.</p>\n                    \n                </div>\n                <div className=\"container\">\n                    <div className=\"col-sm-12\" style={{marginBottom: 24 + 'px'}}>\n                        <button onClick={this.toggleNewWorkOrderBox} id=\"new_workorder_button\" className=\"btn btn-primary full-width\">Add Manual Work Order +</button>\n                    </div>\n                    <div id=\"new_workorder_box\" className=\"row form-group hidden\">\n                        <div className=\"col-sm-12 col-md-16\">\n                            <div className=\"card\">\n                                <div className=\"card-body\">\n                                <div className=\"form-group\">\n                                        <label htmlFor=\"workorder_type\">Type</label>\n                                        <select id=\"workorder_type\" className=\"form-control\">\n                                            <option value=\"maintenance\">Maintenance/Fix</option>\n                                            <option value=\"upgrade\">Upgrade</option>\n\n                                        </select>\n\n                                        <label htmlFor=\"workorder_date\">Finish by</label>\n                                        <input id=\"workorder_date\" className=\"form-control\" type=\"date\"></input>\n                                        <label htmlFor=\"workorder_unit\">Unit</label>\n                                        <input id=\"workorder_unit\" className=\"form-control\" type=\"text\" placeholder=\"Unit\"></input>\n                                        <label htmlFor=\"workorder_description\">Description</label>\n                                        <input id=\"workorder_description\" className=\"form-control\" type=\"textarea\" placeholder=\"Description\" ></input>\n                                        <br></br>\n                                        <button onClick={this.submitWorkOrder} className=\"btn btn-success align_center\">Add Work Order</button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    {this.state.workorders.map(evnt => <div key={evnt.key}>{evnt}</div>)}\n                </div>\n            </div>\n        );\n    }\n\n    submitWorkOrder(){\n        let workorderDate = document.getElementById(\"workorder_date\").value;\n        let workorderDescription = document.getElementById(\"workorder_description\").value;\n        let workorderUnit = document.getElementById(\"workorder_unit\").value;\n        let workorderType = document.getElementById(\"workorder_type\").value;\n        let workorderKey = this.hashCode(workorderDescription) + this.hashCode(workorderDate) + this.hashCode(workorderUnit) + this.hashCode(workorderType);\n\n        firebase.database().ref(\"/landlords/\" + userId + \"/workorders/\" + workorderKey).set({\n            description: workorderDescription,\n            time: workorderDate,\n            type: workorderType,\n            unit: workorderUnit\n        });\n\n        console.log(workorderDate);\n\n        this.toggleNewWorkOrderBox();\n\n    }\n\n    toggleNewWorkOrderBox(){\n        let toggleButton = document.getElementById(\"new_workorder_button\");\n        let workorderBox = document.getElementById(\"new_workorder_box\");\n        let btnText = toggleButton.innerHTML;\n        console.log(btnText);\n        if(btnText == \"Add Manual Work Order +\"){\n            workorderBox.classList.remove(\"hidden\");\n            toggleButton.classList.remove(\"btn-primary\");\n            toggleButton.classList.add(\"btn-danger\");\n            toggleButton.innerHTML = \"cancel\";\n        } else if(btnText == \"cancel\"){\n            workorderBox.classList.add(\"hidden\");\n            toggleButton.classList.remove(\"btn-danger\");\n            toggleButton.classList.add(\"btn-primary\");\n            toggleButton.innerHTML = \"Add Manual Work Order +\";\n        }\n    }\n\n    hashCode(mString) {\n        let returnable = 0;\n        \n        for(let x = 0; x < mString.length; x++)\n        {\n            returnable += mString.charCodeAt(x);\n        }\n\n        return returnable;\n      };\n\n}\n\nexport default WorkOrdersPage;","import React, {Component} from 'react';\n\nclass InfoModal extends Component{\n\n    render(){\n        console.log(this.props.content);\n        \n        return(\n            <div id=\"modal-window\">\n                <div onClick={this.props.hideModal} className=\"blanket\"></div>\n                <div className=\"modal-content\">\n                    <div className=\"container\">\n                        <h1>{this.props.title}</h1>\n                        <hr></hr>\n                        {this.props.content}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    \n\n}\n\nexport default InfoModal;","import React, {Component} from 'react';\n\nclass AnalyticsPage extends Component{\n\n    render(){\n        return(\n            <div>\n                <div className=\"jumbotron\">\n                    <h2>Analytics</h2>\n                    <hr></hr>\n                    <p>Hello Landlord, this is your Analytics Page! This page visualizes important data about your properties in order to aid in business decisions.</p>\n                    \n                </div>\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-sm-12 col-md-6\">\n                            <img className=\"full-width\" src=\"https://placehold.it/300x300\"></img>\n                        </div>\n                        <div className=\"col-sm-12 col-md-6\">\n                            <img className=\"full-width\" src=\"https://placehold.it/300x300\"></img>\n                        </div>\n                    </div>\n                    <br></br>\n                    <div className=\"row\">\n                        <div className=\"col-sm-12 col-md-6\">\n                            <img className=\"full-width\" src=\"https://placehold.it/300x300\"></img>\n                        </div>\n                        <div className=\"col-sm-12 col-md-6\">\n                            <img className=\"full-width\" src=\"https://placehold.it/300x300\"></img>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nexport default AnalyticsPage;","import React, {Component} from 'react';\nimport firebase from '../components/firebase';\n\n// Props = {header, unit, time, description}\n\n\nclass WorkOrder extends Component{\n    constructor (props) {\n\n        super(props);\n        this.finishWorkOrder = this.finishWorkOrder.bind(this);\n\n    }\n    finishWorkOrder(){\n        console.log(this.props.tempkey);\n    }\n    render(){\n        return(\n            <div className=\"row\">\n                <div className=\"col-sm-12 col-md-16\">\n                    <div className=\"card\">\n                        <div className=\"card-body\">\n                            <h3>{this.props.header} <button onClick={this.finishWorkOrder} id=\"finish_button\" className=\"btn float-right btn-primary\">Finish</button></h3>\n                            <b>Unit: {this.props.unit} | Finish by: {this.props.time}</b>\n                            <p>{this.props.description}</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default WorkOrder;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport firebase from '../components/firebase';\nimport Dashboard from '../pages/Dashboard';\nimport PropertiesPage from '../pages/PropertiesPage';\nimport TenantsPage from '../pages/TenantsPage';\nimport AnalyticsPage from '../pages/AnalyticsPage';\nimport WorkOrdersPage from '../pages/WorkOrdersPage';\n\nconst Index = () => <Dashboard></Dashboard>;\nconst Properties = () => <PropertiesPage></PropertiesPage>;\nconst Tenants = () => <TenantsPage></TenantsPage>;\nconst Analytics = () => <AnalyticsPage></AnalyticsPage>;\nconst WorkOrders = () => <WorkOrdersPage></WorkOrdersPage>;\n\nlet onDashboard = false, onProperties = false, onTenants = false, onAnalytics = false, onWorkOrders = false; \n\n\nclass AppRouter extends Component {\n\n  constructor(props){\n    super(props);\n    let err = 1;\n    this.onPageChange = this.onPageChange.bind(this);\n    this.logout = this.logout.bind(this);\n    this.state={\n      onDashboard : \"active\",\n      onProperties : \"\",\n      onTenants : \"\",\n      onAnalytics : \"\",\n      onWorkOrders : \"\"\n    }\n  }\n\n  onPageChange(change){\n\n    switch (change) {\n      case \"Dashboard\":\n        this.setState({\n          onDashboard : \"active\",\n          onProperties : \"\",\n          onTenants : \"\",\n          onAnalytics : \"\",\n          onWorkOrders : \"\"\n        });\n        break;\n    \n      case \"Properties\":\n        this.setState({\n          onDashboard : \"\",\n          onProperties : \"active\",\n          onTenants : \"\",\n          onAnalytics : \"\",\n          onWorkOrders : \"\"\n        });\n        break;\n  \n      case \"Tenants\":\n        this.setState({\n          onDashboard : \"\",\n          onProperties : \"\",\n          onTenants : \"active\",\n          onAnalytics : \"\",\n          onWorkOrders : \"\"\n        });\n        break;\n      case \"Analytics\":\n        this.setState({\n          onDashboard : \"\",\n          onProperties : \"\",\n          onTenants : \"\",\n          onAnalytics : \"active\",\n          onWorkOrders : \"\"\n        });\n        break;\n      case \"WorkOrders\":\n        this.setState({\n          onDashboard : \"\",\n          onProperties : \"\",\n          onTenants : \"\",\n          onAnalytics : \"\",\n          onWorkOrders : \"active\"\n        });\n        break;\n  \n      default:\n        break;\n  \n  \n    }\n  }\n\n  logout(){\n    if(window.confirm('Are you sure you want to log out?')){\n      firebase.auth().signOut();\n      this.props.loginFunction(false);\n    }\n  }\n\n  render(){\n    return (\n      <Router>\n        <div>\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n          <a className=\"navbar-brand\" href=\"/\">Landlord Application</a>\n          <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul className=\"navbar-nav mr-auto\">\n              <li className={\"nav-item \" + this.state.onDashboard}>\n                <Link onClick={() => this.onPageChange(\"Dashboard\")} className=\"nav-link\" to=\"/\">Dashboard</Link>\n              </li>\n              <li className={\"nav-item \" + this.state.onProperties}>\n                <Link onClick={() => this.onPageChange(\"Properties\")} className=\"nav-link\" to=\"/Properties/\">Properties</Link>\n              </li>\n              <li className={\"nav-item \" + this.state.onTenants}>\n                <Link onClick={() => this.onPageChange(\"Tenants\")} className=\"nav-link\" to=\"/Tenants/\">Tenants</Link>\n              </li>\n              <li className={\"nav-item \" + this.state.onAnalytics}>\n                <Link onClick={() => this.onPageChange(\"Analytics\")} className=\"nav-link\" to=\"/Analytics/\">Analytics</Link>\n              </li>\n              <li className={\"nav-item \" + this.state.onWorkOrders}>\n                <Link onClick={() => this.onPageChange(\"WorkOrders\")} className=\"nav-link\" to=\"/WorkOrders\">WorkOrders</Link>\n              </li>\n            </ul>\n            <span className=\"ml-auto\">\n              <button onClick={this.logout} className=\"float-right btn btn-danger\">Logout</button>\n            </span>\n            </div>\n          </nav>\n\n          <Route path=\"/\" exact component={Index} />\n          <Route path=\"/Properties/\" component={Properties} />\n          <Route path=\"/Tenants/\" component={Tenants} />\n          <Route path=\"/Analytics/\" component={Analytics} />\n          <Route path=\"/WorkOrders/\" component={WorkOrders} />\n        </div>\n      </Router>\n    );\n  }\n  \n};\n\nexport default AppRouter;","import React, {Component} from 'react';\nimport firebase from '../components/firebase';\n\nclass LoginPage extends Component{\n    constructor(props){\n        super(props);\n        this.toggleSignup = this.toggleSignup.bind(this);\n        this.onSignUpSubmit = this.onSignUpSubmit.bind(this);\n        this.onSignInSubmit = this.onSignInSubmit.bind(this);\n        this.state = {\n            signup : false\n        }\n    }\n\n    toggleSignup(){\n        let signupForm = document.getElementById('signup_form');\n        let signinForm = document.getElementById('signin_form');\n        let signupButton = document.getElementById('signup_button');\n        if(this.state.signup){\n            signupButton.innerHTML = \"Don't have an account?\";\n            signupForm.classList.add(\"hidden\");\n            signinForm.classList.remove(\"hidden\");\n            this.setState({\n                signup: false,\n                signin: true\n            });\n        }\n        else{\n            signupButton.innerHTML = \"Already have an account?\";\n            signupForm.classList.remove(\"hidden\");\n            signinForm.classList.add(\"hidden\");\n            this.setState({\n                signup: true,\n                signin: false\n            });\n        }\n    }\n\n    onSignInSubmit(){\n        let signinUsername = document.getElementById('signinUsername');\n        let signinPassword = document.getElementById('signinPassword');\n\n        firebase.auth().signInWithEmailAndPassword(signinUsername.value, signinPassword.value).then(() => {\n            // Gucci\n            this.props.loginFunction(true);\n        }).catch((error) => {\n            alert(error.message);\n        });\n\n\n    }\n\n    onSignUpSubmit(){\n        let signupPassword = document.getElementById('signupPassword');\n        let signupConfirm = document.getElementById('signupConfirm');\n        let signupUsername = document.getElementById('signupUsername');\n        let signupFirstName = document.getElementById('signupFirstName');\n        let signupLastName = document.getElementById('signupLastName');\n\n\n        \n        if((signupUsername.value !== \"\") && (signupPassword.value !== \"\") && (signupPassword.value === signupConfirm.value)){\n            \n            alert(\"Creating user\");\n\n            firebase.auth().createUserWithEmailAndPassword(signupUsername.value, signupPassword.value).then(()=>{\n                alert(\"Success\");\n                this.props.loginFunction(true);\n\n                let database = firebase.database();\n                let userId = firebase.auth().currentUser.uid;\n                let ref = database.ref('landlords/'+userId);\n\n                ref.set({\n                    email: signupUsername.value,\n                    firstname: signupFirstName.value,\n                    lastname: signupLastName.value\n                });\n\n            }).catch((error) => {\n                let errorCode = error.code;\n                let errorMessage = error.message;\n\n                alert(errorMessage);\n                console.log(errorCode);\n                \n            });\n        }\n        else if( signupPassword.value !== signupConfirm.value ){\n            alert(\"Passwords do not match\");\n        }\n        else{\n            alert(\"Please fill all fields\");\n        }\n    }\n\n    render(){\n        return (\n            <div>\n                <div className=\"container\">\n                    <div className=\"header text-center\">\n                        <h1>Landlord application</h1>\n                    </div>\n                    \n                    <hr></hr>\n\n                    <div id=\"login_card\" className=\"card\">\n                        <div className=\"card-body\">\n                            \n                            <div id=\"signin_form\">\n                                <h2>Sign In</h2>\n                                <hr></hr>\n                                <div className=\"form-group\">\n                                    <input id=\"signinUsername\" className=\"form-control\" type=\"text\" placeholder=\"Email\" ></input>\n                                    <br></br>\n                                    <input id=\"signinPassword\" className=\"form-control\" type=\"password\" placeholder=\"Password\"></input>\n                                </div>\n                                <button onClick={this.onSignInSubmit} className=\"form-control btn btn-primary\">Sign In</button>\n                            </div>\n                            <hr></hr>\n                            <button id=\"signup_button\" className=\"btn btn-secondary\" onClick={this.toggleSignup}>Don't have an account?</button>\n                            <div id=\"signup_form\" className=\"hidden\">\n                                <h2>Sign Up</h2>\n                                <hr></hr>\n                                <div className=\"form-group\">\n                                    <label>Name</label>\n                                    <div className=\"row\">\n                                        <div className=\"col-6\">\n                                            <input id=\"signupFirstName\" className=\"form-control\" type=\"text\" placeholder=\"First\"></input>\n                                        </div>\n                                        <div className=\"col-6\">\n                                            <input id=\"signupLastName\" className=\"form-control\" type=\"text\" placeholder=\"Last\"></input>\n                                        </div>\n                                    </div>\n                                    <br></br>\n                                    <input id=\"signupUsername\" className=\"form-control\" type=\"text\" placeholder=\"Email\"></input>\n                                    <br></br>\n                                    <input id=\"signupPassword\" className=\"form-control\" type=\"password\" placeholder=\"Password\"></input>\n                                    <br></br>\n                                    <input id=\"signupConfirm\" className=\"form-control\" type=\"password\" placeholder=\"Confirm\"></input>\n                                </div>\n                                <button onClick={this.onSignUpSubmit} className=\"form-control btn btn-primary\">Sign Up</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default LoginPage;","import React, { Component } from 'react';\nimport '../node_modules/jquery/dist/jquery';\nimport '../node_modules/bootstrap/dist/js/bootstrap';\nimport '../node_modules/react-popper/dist/index.umd';\nimport logo from './logo.svg';\nimport './App.css';\nimport AppRouter from './components/AppRouter';\nimport LoginPage from './pages/LoginPage';\nimport firebase from './components/firebase';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nclass App extends Component {\n//test\n\n    constructor(){\n    super();\n    this.loginCheck = this.loginCheck.bind(this);\n    this.setLoggedInVal = this.setLoggedInVal.bind(this);\n    this.state = {\n      loggedIn: false\n    }\n\n    firebase.auth().onAuthStateChanged((user) => {\n      if(user)this.setState({loggedIn:true});\n      else this.setState({loggedIn:false});\n    }\n    );\n\n  }\n\n  setLoggedInVal(loggedIn){\n    this.setState({\n      loggedIn: loggedIn\n    });\n  }\n\n\n  componentDidMount(){\n\n    console.log(firebase.auth().currentUser);\n    \n    \n  }\n\n  loginCheck(){\n    \n    if(this.state.loggedIn){\n      // console.log(firebase.auth().currentUser.uid);\n      return (\n        <div className=\"App\">\n          <header className=\"App-header\">\n          <link rel=\"stylesheet\" href=\"./App.css\"></link>\n          <link href=\"https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\" rel=\"stylesheet\" integrity=\"sha384-wvfXpqpZZVQGK6TAh5PVlGOfQNHSoD2xbE+QkPxCAFlNEevoEH3Sl0sibVcOQVnN\" crossOrigin=\"anonymous\"></link>\n          </header>\n          <div className=\"container\">\n            <AppRouter loginFunction={this.setLoggedInVal}></AppRouter>\n          </div>\n        </div>\n      );\n    }\n    else {\n      return (\n        <LoginPage name=\"Kyle\" loginFunction={this.setLoggedInVal}></LoginPage>\n      );\n    }\n  }\n\n  render() {\n    if(this.state.loggedIn){\n      return (\n        <div className=\"App\">\n          <header className=\"App-header\">\n          <link rel=\"stylesheet\" href=\"./App.css\"></link>\n          <link href=\"https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\" rel=\"stylesheet\" integrity=\"sha384-wvfXpqpZZVQGK6TAh5PVlGOfQNHSoD2xbE+QkPxCAFlNEevoEH3Sl0sibVcOQVnN\" crossOrigin=\"anonymous\"></link>\n          </header>\n          <div className=\"container\">\n            <AppRouter loginFunction={this.setLoggedInVal}></AppRouter>\n          </div>\n        </div>\n      );\n    }\n    else{\n      return (\n        <LoginPage name=\"Kyle\" loginFunction={this.setLoggedInVal}></LoginPage>\n      );\n    }\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}